a set job singl server onli job time job time incur wait cost wait time job share cost compens monetari transfer shapley valu rule model fair axiom axiom bound cost share job group effici independ properti cost share job categori subject descriptor j4 [ social behaviori scienc ] econom gener term econom theori set job server server onli job time job finit process time unit time cost effici order queue job order ratio unit time cost process time job monetari transfer job job share cost equit transfer problem fair divis cost agent queue mani practic applic exampl comput program regularli server data network job shop-floor machin queue mani public servic post offic bank studi problem economist long time ] cost share fundament problem mani set internet internet common resourc mani user cost resourc equit manner current surg cost share literatur comput scientist claim ] internet mani set model job agent queue incur cost job server queri databas data fix bandwidth network etc analysi new insight cost problem natur recent interest cost share method submodular cost function ] mani set submodular cost function exampl multi-cast transmiss game ] cost function game supermodular also such literatur typic not budget-bal transfer inher featur model recent paper maniquet [ ] model motiv work maniquet ] studi model all process time uniti such model shapley valu rule classic fair axiom chun ] worth coalit job differ manner same model revers rule chun rule similar fair axiom chun ] also studi envi properti rule moulin ] studi problem strateg point view unit wait cost uniti moulin new concept set such split merg job way stream literatur game first curiel al ] detail survey curiel al ] curiel al ] game similar model initi order job notion worth coalit veri differ notion maniquet [ ] chun [ ] notion work too particular notion worth coalit sequenc game curiel al ] convex game not convex not presenc initi order summari focu stream author fran¸coi maniquet sever fruit discuss research share save cost initi order optim amongst job also hamer al ] curiel al ] recent klijn s´anchez [ ] game initi order job approach worth coalit approach tail game revers rule chun [ ] tail game job coalit job not coalit klijn s´anchez [ ] tail game express shapley valu tail game term margin vector margin vector simpler express shapley valu tail game result chun [ ] klijn s´anchez [ ] core game detail strateg aspect problem also mitra ] studi first implement model gener cost function first implement effici mechan job queue domin strategi true type transfer up suij ] show cost job linear then first implement possibl mitra ] show gener class problem first implement possibl onli cost linear model mitra [ ] show first implement possibl onli cost function combinatori properti independ properti moulin ] studi strateg concept such split merg problem unit unit cost gener cost share literatur vast long histori good survey ] semin work shapley [ ] recent work cost share multi-cast transmiss optim problem ] area economist comput scientist oper research contribut our first model cost share process time unit cost job present cooper game theori approach classic shapley valu rule problem shapley valu rule satisfi mani intuit fair axiom due dimension natur model dimension natur maniquet s model ] axiom insuffici shapley valu set axiom such independec job unit cost independ job process time key axiom bound cost share job group job same ratio unit time cost process time job manner themselev effici order such group just job then axiom job own process cost cost onli job queue multipl job such group probabl job group cost other same effici order order job cost other fair axiom job such cost shapley valu rule fair axiom also envi result [ ] set class reason cost mechan model n job server onli job time set job n = n σ n → n order job n σi posit job i order σ σ defin fi σ j ∈ n σi < σj pi σ j ∈ n σi > σj everi job i paramet pi θi pi process time θi cost unit time job i thu queue problem list q = n p θ ∈ q q set possibl list γi = θi pi order job σ cost job i ci σ piθi + θi j∈pi σ pj total cost job due σ way i cost job ii cost job other job own process cost c n σ i∈n ci σ i∈n piθi + i∈n ¡θi j∈pi σ pj¢ i∈n piθi + i∈n ¡pi j∈fi σ θj¢ effici order σ∗ total cost job so c n σ∗ c n σ σ ∈ σ notat simplic total cost effici order job n c n not sometim onli subset job s ⊆ n σ then job s onli total cost effici order job s c s follow lemma show job γ effici order also weight shortest process time rule first smith [ ] lemma s ⊆ n σ∗ effici order job s i j i j ∈ s i σ∗ j then γi ≤ γj proof assum contradict statment lemma not true consecut job i j ∈ s i σ∗ j + γi > γj new σ i j σ∗ cost job s \ i j not σ∗ differ total cost σ∗ σ c s σ c s σ∗ θjpi − θipj effici θjpi − θipj γj ≥ γi contradict alloc q = n p θ ∈ q compon σ transfer ti job i n ti payment job i transfer ti order σ cost share job i ci σ ti = θi j∈n σj ≤σi pj − ti alloc t effici q = n p θ σ effici order £i∈n set effici order q σ∗ q σ∗ q typic element set straightforward lemma differ effici order cost share effici alloc possibl other appropri transfer lemma t effici alloc π vector cost share job alloc σ∗ = σ effici order t∗ i ci σ∗ πi ∀ i n then t∗ also effici alloc proof σ t effici £i∈n ti £i∈n πi = c n σ∗ effici order £i∈n ci σ∗ c n £i∈n t∗ i £i∈n [ ci σ∗ πi ] = so t∗ effici alloc transfer cost share differ effici alloc alloc rule ψ associ q ∈ q non-empti subset ψ q alloc cost share the shapley valu section coalit cost game solut shapley valu queue q ∈ q cost coalit s ⊆ n job queue cost job s onli job queue effici order formal cost coalit s ⊆ n c s i∈ j∈ σ∗ j ≤σ∗ i θjpj σ∗ = σ∗ s effici job s onli worth coalit s job just s maniquet ] equival way worth coalit dual function cost function c · other interest way worth coalit such game chun [ ] coalit job job not coalit shapley valu cost share job i svi = s⊆n\ i |s| |n| − |s| − |n| ¡c s∪ s ¢ shapley valu alloc rule job effici order transfer job such cost share job i equat σ∗ effici order job set n i ∈ n shapley valu svi = piθi ¡li + ri¢ li = θi £j∈pi σ∗ pj ri = pi £j∈fi σ∗ θj proof way shapley valu formula follow [ ] svi = s⊆n i∈ ∆ s |s| ∆ s c s ∆ s c s s ∆ t ∆ c n i j ∈ n i = j i j c i j c c j min piθi + pjθj + pjθi piθi + pjθj + piθj piθi − pjθj = min pjθi piθj induct ∆ s |s| = s = i j k loss gener θi pi ≥ θj pj ≥ θk pk so ∆ s c s ∆ i j ∆ j ∆ i j c s −pjθk − piθk − piθi − pjθj − pkθk = c s c s now t s ∆ t loss gener ident map now ∆ s c s t s ∆ t c s i∈ j∈ j < i ∆ i j i∈ ∆ c s i∈ j∈ j < i − i∈ piθi = c s c s ∆ s shapley valu formula now svi = s⊆n i∈ ∆ s = ∆ j∈n j=i ∆ i j piθi ¡ j < i ∆ i j j > i ∆ i j piθi ¡ j < i + j > i piθi ¡li + ri¢ the shapley valu section server axiom fair shapley valu q ∈ q ψ q set alloc alloc rule ψ also cost share vector alloc rule t π alloc rule t π etc fair axiom type fair axiom i effici ii equiti iii independ effici type effici axiom effici order transfer job budget balanc definit alloc rule ψ effici q ∈ q σ t ∈ ψ q t effici alloc second axiom effici alloc rule not alloc equival other term cost share job definit alloc rule ψ pareto indiffer q ∈ q t ∈ ψ q σ t ∈ σ q = πi ∀ i n¢⇒ ¡ σ t ∈ ψ q ¢ implic pareto indiffer axiom lemma effici set transfer job such part effici rule cost share job alloc same equiti axiom how cost job job kind similar equiti fair properti question such axiom axiom exampl anonym equal treatment equal literatur new well equiti axiom anonym denot ρ n → n permut element n let ρ σ t alloc element σ t ρ similarli ρ p θ new list p θ element p ρ first equiti axiom state alloc rule immun such permut data definit alloc rule ψ anonym q ∈ q t ∈ ψ q permut ρ then ρ σ t ∈ ψ n ρ q next equiti axiom classic literatur similar job such cost share equal job same type then job equal share total system cost definit alloc rule ψ equal treatment equal ete q ∈ q t ∈ ψ q i j ∈ n then ¡pi = pj θj¢⇒ ¡πi = πj¢ ete share cost equal job same unit cost process time silent cost share job i j θi pi = θj pj new axiom effici rule choos such < σj i j ∈ n then job i cost piθj job j job j cost job i defin γ s γ i n γi = γ effici rule element s γ manner |s γ | way i j ∈ s γ then = piθj probabl σi < σj so probabl σi > σj expect cost i inflict j piθj j inflict i pjθi next fair axiom i j respons own process cost cost other pair job i j ∈ s γ bound cost share job s γ equiti axiom definit alloc rule satisfi cost bound ecb q ∈ q t ∈ ψ q π cost share γ ≥ i s γ ≥ piθi ¡ j∈ γ σj < σi pjθi + j∈ γ σj > σi piθj¢ central idea axiom cost alloc rule multipl alloc equal probabl alloc case expect cost job i job j alloc rule axiom cost share job own process cost total cost other note abov bound constraint cost differ group also s γ just job ecb job own process cost direct consequ ecb follow lemma lemma ψ effici rule ecb q ∈ q s γ = n then σ t ∈ ψ q cost share π πi = piθi ¡li + ri¢∀ i n proof from ecb πi ≥ piθi+1 ¡li+ri¢∀ i n assum contradict j ∈ n such > pjθj ¡li + ri¢ use effici fact £i∈n li = £i∈n ri £i∈n πi = c n £i∈n piθi £i∈n ¡li + ri¢ = c n contradict next axiom transfer job set job particular last job system then not transfer last job need other job proport process time job last job process time definit alloc rule ψ satisfi respons p prp q ∈ q σ t ∈ ψ q ∈ n such = |n| q = n \ k p θ ∈ q such i ∈ n\ k θi = θi pi = pi t ∈ ψ q i n \ k σi = σi = ti + tk pi £j=k pj analog fair axiom result job begin queue presenc first job job θ valu transfer proport valu definit alloc rule ψ satisfi respons θ prθ q ∈ q σ t ∈ ψ q ∈ n such = q = n \ k p θ ∈ q such i n \ k θi = θi pi = pi t ∈ ψ q i n \ k σi = σi = ti + tk θi £j=k θj proportion respons axiom gener equal respons axiom maniquet [ ] independ axiom cost job not per unit cost job similarli cost job job independ process time job independ properti cost share rule independ axiom definit alloc rule ψ independ job θ ipjθ q = n p θ q = n p θ ∈ q t ∈ ψ q t ∈ ψ q i n \ k θi = θi pi = pi γk < γk pk = pk then j ∈ n such > σk πj = πj π cost share t cost share t definit alloc rule ψ independ job p ifjp q = n p θ q = n p θ ∈ q t ∈ ψ q t ∈ ψ q i n \ k θi = θi pi = pi γk > γk θk = θk then j ∈ n such < σk πj = πj π cost share t cost share t character result have fair axiom differ way shapley valu rule axiom character effici ecb ipjθ need ifjp prp similarli ifjp need ipjθ prθ proposit effici rule ecb ipjθ ifjp rule shapley valu rule proof defin i j ∈ n θi j = γipj j = θj γi assum loss gener σ effici σi = i i n consid q = n p θ job i pj = pj j ≤ i pj = pi j j > i θj = θi j j < i θj = θj j ≥ i job same γ γi lemma effici t ∈ ψ q set transfer lemma cost share i t πi = piθi ¡li + ri¢ now j < i θj process time new γ j γj ≥ γi appli ipjθ cost share job i not similarli job j > i pj θj new γ j γj ≤ γi appli ifjp cost share job i not procedur j < i ipjθ j > i ifjp q = n p θ payoff i not πi argument i n express shapley valu lemma shapley valu rule possibl independ axiom equiti axiom transfer job proposit proposit effici rule ecb ipjθ prp rule shapley valu rule proof proof proposit defin θi j = γipj ∀ i j ∈ n assum loss gener σ effici σi = i i n consid queue job set k = i i n defin q = k p θ θj = θi+1 j ∀ j ∈ k defin σj = σj ∀ j ∈ k σ effici order q ecb lemma cost share job i alloc rule ψ πi+1 = pi+1θi+1 ¡£j < i+1 pjθi+1¢ now q = k p θ such = θi j ∀ j ≤ i θi+1 = θi+1 σ effici order q ipjθ cost share i remain πi+1 q = k \ i p θ cost share job i ecb lemma πi = piθi £j < i so prp new cost share job i q πi = πi + ti+1 pi j < i+1 pj = piθi ¡£j < i + piθi+1¢ now k = k ∪ i befor cost share i queue πi+2 = pi+2θi+2 ¡£j < i+2 pjθi+2¢ prp new cost share job i new queue πi = piθi ¡£j < i + piθi+1 + piθi+2¢ process job n point cost share i piθi + ¡£j < i + £j > i piθj¢ then θ job i origin valu ipjθ payoff job n not shapley valu job n set i cost share job ψ shapley valu proposit effici rule ecb ifjp prθ rule shapley valu rule proof proof proof proposit short sketch analog proof proposit kept equal origin data process time j ifjp also contrast proposit k = i n repeatedli job begin queue same effici order so cost compon job cost share job iter converg shapley valu rule next proposit shapley valu rule fair axiom proposit shapley valu rule satisfi effici pareto indiffer anonym ete ecb ipjθ ifjp prp prθ proof shapley valu rule effici order definit payment upto zero so effici shapley valu same cost share job irrespect effici chosen so pareto indiffer shapley valu anonym particular index job not effect order cost share ete job j ∈ n such = pj θi = θj loss gener effici order i j n now shapley valu job i svi = piθi ¡li + ri¢ from lemma = pjθj ¡lj + rj¢− ¡li − lj + ri − rj¢ = svj ¡ i k≤j piθk − i≤k < j pkθi¢ = svj i k≤j piθk − pkθi pi = pj θi = θj svj θk pk = θi pi i k ≤ j shapley valu satisfi ecb express lemma job i effici order σ valu γj j i such > σi then set pi job not new effici order γj such pj same then express £j∈pi θipj unchang p θ valu other job then shapley valu unchang γj j pi pj unchang thu shapley valu rule satisfi ipjθ analog argument shapley valu rule satisfi ifjp prp loss gener job n effici order transfer job i = n due shapley valu set job n set job n \ n ti ti respect transfer last job tn = θn £j < n pj now ¡θi j < i − pi j > i ¡θi j < i − pi j > i j=n piθn = ti θn j < pj pi £j < = ti − tn pi £j < n pj similar argument shapley valu rule satisfi prθ seri proposit main result ψ alloc rule follow statement equival q ∈ q ψ q alloc job cost share shapley valu ψ satisfi effici ecb ifjp ipjθ ψ satisfi effici ecb ifjp prθ ψ satisfi effici ecb prp ipjθ proof proof proposit a reason class cost share mechan section reason class cost share mechan reason mechan shapley valu mechan definit alloc rule ψ reason q ∈ q σ t ∈ ψ q i ∈ n ti = α ¡θi j∈pi σ pj − pi j∈fi σ i ∈ n ≤ α ≤ reason cost mechan job constant fraction differ cost cost other job α then job own cost α then job cost other cost other shapley valu rule result ete follow proposit proposit effici reason alloc rule satisfi ete rule shapley valu rule proof q ∈ q pi = pj θi = θj let t ∈ ψ q cost share ete πi = πj ⇒ ci σ ti = cj σ tj ⇒ piθi + − α li + αri = pjθj + − α lj + αrj ψ effici reason ⇒ − α li − lj α rj − ri pi = pj θi = θj − α = α li − lj = rj − ri = ⇒ α shapley valu rule lemma result envi chun ] fari condit no-envi case time job uniti definit alloc rule satisfi no-envi q ∈ q t ∈ ψ q i j ∈ n ≤ ci σij − tj π cost share alloc rule t obtain i j result ] shapley valu rule not no-envi model also chun ] introduc notion adjust no-envi shapley valu rule time job uniti here envi shapley valu rule model time not uniti denot σij order posit i j σ adjust noenvi t alloc q ∈ q tij transfer job i transfer i respect σij observ alloc not calcul tij exampl effici then tij not σij also not effici simplic state definit no-envi such rule definit alloc rule satisfi noenvi q ∈ q t ∈ ψ q i j ∈ n ≤ ci σij tij i proposit shapley valu rule satisfi no-envi proof loss gener effici order job n consid job i i k from lemma svi = piθi ¡ j < i + j > i ˆπi cost share i due transfer tii+k i order σii+k = ci σii+k tii+k i piθi ¡ j < i + θipi+k + i j < i+k θipj + j > i − θi+kpi − i j < i+k θjpi¢ = svi i j≤i+k ¡θipj − θjpi¢ ≥ svi fact θi ≥ θj pj i < j conclus problem cost job problem singl server job time unit time cost cooper game theori approach show famou shapley valu rule satisfi mani nice fair properti shapley valu rule differ intuit fair axiom futur fair axiom initi simplif alreadi ] altern axiom ecb also implic transfer job stead transfer job central server also cost mechan other shapley valu strateg power job such mechan line futur research 