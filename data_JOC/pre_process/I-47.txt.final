social stanc institut framework multi-ag system methodolog wide spectrum organiz commun abstract currenc sever program framework softwar platform still tool framework limit rang interact capabl develop fix set particular pre-defin abstract main hypothesi paper varieti multi-ag interact organiz commun share common semant core realm softwar architectur paper connector-bas model multi-ag interact essenti structur multi-ag interact furthermor paper also model formal execut semant dynam social interact model abstract machin organiz program languag programm open set interact mechan categori subject descriptor i211 [ artifici intellig ] artifici intelligence-multi-ag system gener term languag theori design suitabl agent-bas complex pattern interact natur develop larg scale open system major asset last few year [ ] particularli organiz social stanc institut framework ] multi-ag system ma ] excel basi complex dynam interact system compon approach wide spectrum organiz commun abstract such institut norm posit power relationship organ group scene dialogu game commun action ca effect interact space ma wealth comput abstract currenc sever program framework softwar platform ame [ ] madkit ] ingenia ] multi-ag middlewar raw acl-bas interact mechan ] gap organiz metamodel implement languag still tool framework limit rang interact capabl develop fix set particular pre-defin abstract main hypothesi paper varieti multi-ag interact organiz commun share common semant core paper thu fundament build block multi-ag interact order complex organiz commun type interact first goal principl analysi multiag interact gener featur commonli agent-bas comput autonomi situated social ] issu notion connector forward field softwar architectur ] outcom analysi connector-bas model multi-ag interact autonom social situat compon ie agent essenti structur furthermor paper also model formal execut semant dynam multi-ag social interact structur oper semant so ] common techniqu oper semant languag purpos paper first major entiti relationship structur social interact next dynam social interact entiti relationship last relev work literatur 978-81-904262-7-5 rp c ifaama respect propos limit current futur work social interact structur architectur point view interact softwar compon softwar connector first-class entiti basi differ role softwar compon protocol behaviour ] role connector repres particip such caller calle role rpc connector sender receiv role messag connector attach oper compon role connector analysi social interact section rise new kind social connector gener model sever respect featur commonli agent-bas comput • autonomi featur first kind particip ie role social interact so-cal agent basic agent softwar compon autonom scope interaction1 a second group particip so-cal environment resourc situated featur agent resourc nonautonom compon state extern other compon agent resourc interact moreov particip resourc interact not mandatori • last social agent specif social connector glue link agent resourc norm concept such permiss oblig empower ] agent resourc social protocol other kind entiti major relev analysi social interact action way agent environment social state interact event chang interact perform action activ environment resourc follow basic entiti social interact kind entiti t record type t l1 t1 ln tn possibl number invari definit action state instanc valu v record type t v = v1 vn t type sett collect valu type t type queuet queue valu v t valu v express [ v| ] queue [ t ] head queue type enum v1 vn note autonomi featur rel rather perspect basic softwar compon agent social interact non-autonom other context eg interact human-us interfac conceptu agenthood resembl way object understood corba kind softwar compon c prolog cobol orb enumer type valu v1 vn valu v t term vl refer valu field l record type t given label l2 express vl1 l2 syntact sugar vl1 l2 special term nil absenc proper valu option field vl = nil true case fals otherwis formal model sever exampl design virtual organ aid manag univers cours social interact social interact composit connector ] term tree nest subinteract interact univers cours eg data structur hand interact actual complex lower-level interact instanc scope cours agent assign group lectur meet examin so assign group turn number assign submiss test request interact test request also complex interact ultim atom bottom-level interact commun action eg request refus other hand cours scope particular degre eg comput scienc higher-level interact upward degre ancestor faculti univers final multi-ag commun agent societi commun thu top-level interact other kind multi-ag interaction2 organiz commun interact type clearli mani way howev major compon agent resourc agent protocol agent activ subinteract space accordingli type social interact meta-vari i state si ini mem set a env set r sub set prot p ch ch def icontext = i1 ⇔ i isub inv iini = ⇔ icontext = nil act setup join creat member environ field agent local resourc r interact sub-interact field set inner interact protocol field rule interact p event channel next section dispatch local event extern interact context interact super-interact def so context toplevel interact nil type si enum open close possibl execut state interact interact top-level one context interact initi agent initi context applic one-to-on map human user softwar compon commun agent right choic sixth intl joint conf autonom agent multi-ag system aama thu mandatori featur interact differ commun inv life-cycl interact open state set agent resourc particip initi empti vari agent join interact destroy resourc local environ eventu interact end protocol s rule explicitli agent thu prematur activ particip transient close state next section agent compon agent social interact purpos someth purpos agent interact institut goal context3 type agent interact primarili purpos instanc student agent cours certif cours s subject other member cours lectur assist type a agent meta-vari state sa player purp f att queue act ev queue e obl set o def = i ∈ imem a1 ∈ arol aplay = i apartin ⇔ a1 ∈ imem ∧ a1 ∈ act see purpos well-form boolean formula gener type f true purpos satisfi fals otherwis context agent interact def type sa enum play succ unsuc execut state agent life-cycl begin play state player agent interact softwar compon agent multi-ag system latter case player valu nil deriv role partin featur role agent context role def agent role interact scope context instanc student cours student agent undergradu degre lectur teacher depart assist role student phd degre depart phd degre sub-interact faculti compon normal differ action eg sub-interact order purpos interact moreov compon awar current state interact also capabl certain event interact visibl interact thu not actual intern goal intent compon free variabl antecedents/consequ implic understood universally/existenti attempt member subject rule interact attempt event field agent structur queue attempt action act event e agent not yet agent event queue state entiti commun last field structur oblig o agent later eventu particip agent interact over either certain condit protocol rule agent explicit decis interact case final state agent success purpos unsuccess otherwis transient state next section resourc resourc softwar compon differ type non-autonom inform comput entiti instanc object topic assign grade exam differ kind inform resourc lectur assist context cours interact student also program requir assign other type comput resourc dispos student teacher compil interpret type r resourc meta-vari r follow record type r cr owner set a op set op def rcontext = i r ∈ ienv act take share essenti resourc object social set resourc agent social interact context def rule protocol mandatori featur creator agent resourc moreov resourc owner ownership relationship member resourc norm devic simplif protocol s rule interact agent environ member ownership resourc grant ownership other agent own properti instanc ownership program sever student assign group student last oper interfac resourc set oper resourc sever public oper particip accord rule interact s protocol set oper resourc interfac protocol protocol interact rule overal state dynam present specif away particular formal rule instead sever requir structur interfac protocol accordingli type p protocol metath sixth intl joint conf autonom agent multi-ag system aama variabl p follows5 p emp × act → boolean perm × act → boolean obl → set a × set o × set e monitor e set a finish → boolean → boolean def pcontext = i p = iprot inv pfinish s ∈ pcontext sub ⇒ sprot finish pfinish ∈ pcontext pover pover ∧ ∈ arol acontext prot i ai ∪ ⊆ pmonitor α act close leav protocol major kind function firstli rule empower permiss agent state interact eg member environ execut action eg join creat etc empower institut capabl agent possess order purpos correspond rule empow function field agent capabl action interact empower onli certain circumst permiss permiss rule attempt empow agent particular action satisfi not cf permit field instanc cours s protocol specifi agent interact student student degre fee cours s subject certif prerequisit subject permiss rule turn student onli cours admiss stage henc even student fee attempt cours cours not correspond stage6 secondli oblig agent interact oblig norm devic social enforc fulli compat autonomi agent behaviour certain direct kind rule agent action type as well oblig need function oblig protocol structur thu agent oblig moreov agent collect event chang oblig set instanc cours s protocol member depart cours teacher cours s subject thirdli protocol monitor rule differ event interact rule set agent event instanc formal protocol s function implicitli input interact haspaidfe relationship degre student subject resourc addit application-depend field agent structur kind role similarli admiss stage addit boolean field structur school interact gener type a r p thu extend tional teacher order enrol student cours last protocol state interact as well state member rule condit interact automat particip member agent automat thu function field finish return true regul interact execut so well-defin set protocol sub-interact member as well inv similarli function return true particip specifi member well-form protocol consist function role inv instanc cours s protocol particip student ownership cours s certif chanc also cours admiss stage student particip social interact dynam dynam multi-ag commun extern action softwar compon protocol interact section dynam particular kind extern action attempt compon commun agent intern action descript other extern action agent eg event event queue enter exit commun resourc eg timer resourc pass time process attempt rise chang scope target interact such instanti new particip agent resourc new sub-interact event further chang state other interact target name execut state as well execut state oblig visibl member section also way event dynam bellow allow action event differ agent interact simultan due space onli oper rule execut semant attempt attempt structur at t perf a act act perform agent charg action action state target interact possibl perform s collect addresse chang success execut accordingli type act action meta-vari α act state sact target def αperf ⇔ α ∈ close action finish function field next section addit action such permit forbid empow etc other protocol s field yet futur work sixth intl joint conf autonom agent multi-ag system aama perform formal agent store action queue attempt state field current phase process process major phase enumer type sact enum emp perm exec empower check permiss check action execut sequel empower post-condit attempt action queue attempt specifi perform rule specifies8 onli possibl perform action rule state target interact condit not attempt simpli moreov perform agent play state pre-condit also rule process attempt pre-condit rule process action permiss check stage instanc softwar compon student degre attempt student cours subject empower rule cours interact degre student cours s prerequisit join action queue attempt execut prot α = play qact α at t −→ play qact w here α state = perm qact = insert qact permiss process action possibl preced action perform s queue attempt fulli queue moreov event interact event member interact shortli next sub-sect condit permiss action specifi addresse eg student fee cours s subject protocol target interact grant permiss process attempt action execut stage rule action queue unempow attempt forbidden event event channel further process = perm ∧ acontext ch ∧ αtarget prot perm α = play [ α| ] −→ play [ α | ] w here α state exec label record instanc compact specif moreov note record claus onli specifi field action execut transit stage differ type action intend effect action directli singl step other indirect approach possibl sever execut step action first kind construct one such join second group action such close leav effect indirectli interact protocol exampl construct action execut action type follows9 setup act · new αnew = αnew sub = ∅ αnew state = open new field new interact set particip agent resourc sub-interact empti inv state open inv new interact thu protocol possibl application-depend field eg subject cours interact rule outcom execut threefold firstli perform s attempt queue so action secondli new interact target s set sub-interact moreov initi field perform agent last event chang descript chang agent action output port target s event channel = exec ∧ α setup ∧ αnew = = play [ α|qact ] −→ play qact = open si −→ open si ∪ i c w here i ini c ev = insert α sub i cout ev consid now case close action action attempt perform interact thu current protocol rule finish function way effect updat protocol finish function return true afterwards10 accordingli type action close act · upd bool → → bool inv αtarget state = αtarget context = nil αupd prot finish inherit target field interact open differ topinteract invari new type consist field act record addit new field strategi also definit leav also definit other type action such fire permit forbid sixth intl joint conf autonom agent multi-ag system aama updat field proper higher-ord function target s protocol inv transit model execut action rule defin effect target interact protocol event chang output port event actual close process interact next subsect = exec ∧ α = play [ α|qact ] −→ play qact = open p −→ open p c w here p finish = αupd pfinish c ev = insert α finish αtarget cout ev event process event event channel interact channel meta-vari c input output port follow definit ch outp inp inv ccontext ∈ cout disp finish ccontext ccontext ∈ cout disp ccontext sub ⊆ cout disp close ccontext apartsin ⊆ cout disp ccontext ∈ cout disp close i ccontext aplay context cout disp ev queue e disp e set int set ag inp ev queue e stage enum int mem obl ag a output port store event scope channel s interact first purpos local event agent protocol s monitor function moreov event result finish oblig function certain protocol also input port interact dispatch function invari later thu input port coordin mechan re-evalu abov functio event received11 accordingli process event major stage event dispatch interact state updat member state updat oblig first place output port interact event other one separ control thread input port interact event event process event output port event first step auxiliari int ag field initialis altern interact fulli awar chang multi-ag commun scenario interact explicit notif contrari realist assumpt limit awar return valu dispatch protocol s monitor function respect then addit rule simpli collect agent interact ie set empti last event queue auxiliari field re-set dispatch function set interact possibl empti event channel s interact instanc finish rule univers cours last section event end admiss stage scope school interact cours school s degre monitor function invari protocol event result action perform agent perform addresse action thu monitor rule univers cours student degre certain cours colleagu addresse action cours s teacher also success execut ccontext state s open ∧ ccontext prot monitor s = mon cs = [ e| ] d nil nil −→ [ e| ] d e e interact state updat input port activ new event kind event first process action channel s interact thu dispatch finish event close action inv serv trigger close procedur interact not input port stage field member state updat stage auxiliari ag field interact member otherwis possibl scenario first interact member sub-interact case interact inmedi down rule show interact context s set sub-interact close event output channel invari event later input channel further treatment cin = ∅ ∧ cin stage = int ∧ pfinish i ∪ si −→ si i = ∅ p c1 −→ w here ev = insert close i cout ev second scenario interact member sub-interact case clean-up prior dispos interact admiss period end student cours teacher cours rule show interact transient close state correspond event output port invari close event sub-interact order close procedur invari moreov essenti protocol rule interact way dispatch function scope paper sixth intl joint conf autonom agent multi-ag system aama stage ag field properli so process next member state updat stage stage process member cin ev = ∅ ∧ cin stage = int ∧ pfinish ∧ sa = ∅ ∨ = ∅ i open sa si p close sa si p c w here ev = insert close i cout ev c stage = mem c ag = sa eventu member interact sub-interact event interact invari so condit first scenario member state updat stage simpli member interact protocol s function member stage field next oblig updat stage auxiliari ag field agent protocol s oblig updat function member particip interact not role inmedi success unsuccess satisfact purpos correspond event interact interact player agent further chang inv member transient state thu action perform then complet procedur play role proper dispatch event inv oblig stage oblig agent not necessaryli member interact interact accordingli agent event input queue stage field back interact state updat instanc cours interact event assign depart member subject oblig cours teacher member moreov event chang output channel depart interact discuss paper possibl semant core wide spectrum interact type autonom social situat softwar compon realm softwar architectur core oper model social connector basic structur dynam multi-ag interact agent societi down one commun action thu top-level interact kind agent-web large-scal initi such agentcities/opennet [ ] large-scal interact complex aggreg agent interact such e-institut virtual organ ] also amen particular kind first-level social interact last level interact tree small-scal multiag interact such interact protocol ] dialogu game ] scene ] final bottom-level interact commun action perspect member type ca speaker possibl mani listen purpos speaker illocutionari purpos ca [ ] purpos listen actual softwar compon success mean ca analysi social interact forward paper current propos literatur sever gener respect such institut organiz charact multi-ag system ] norm perspect multi-ag protocol ] propos as well other relev abstract such power relationship contract trust reput mechan organiz set etc further order accur organiz charact multi-ag interact similarli conceptu commun action atom interact similarli public semant commun action such [ ] last abstract model protocol account oper model norm ] analys new organiz commun abstract refin and/or extens gener model social interact thu model not organiz commun featur multi-ag interact root basic interact mechan turn exploit common formal particularli protocol develop individu agent greatli design sever agent languag ] societ featur multi-ag system mostli term visual model [ ] fix set interact abstract current field multi-ag system program greatli multi-ag program languag programm open set interact mechan model social interact forward paper abstract machin languag type abstract machin independ particular agent architectur languag ie softwar compon bdi languag such jason ] non-ag orient languag top present execut semant current futur work aim specif type system ] program abstract machin specif correspond surfac syntax textual visual design implement virtual machin middlewar technolog such fipa platform web servic also particular refin limit model particularli respect dispatch event semant sixth intl joint conf autonom agent multi-ag system aama oblig dynam updat protocol rule formal latter aspect use answer set program rule protocol role incomplet rule onli either necessari suffici condit instanc explicit negat eg prohibit default domain author anonym review comment suggest research spanish ministri scienc educ mec project tin200615455-c03-03 