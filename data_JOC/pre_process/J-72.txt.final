parallel prefer elicit problem combinatori auction problem unknown function theori algorithm basi prefer elicit algorithm elicit algorithm polynomi number queri also condit algorithm polynomi commun convers procedur combinatori auction protocol algorithm polynomi monoton dnf linear-threshold function particular algorithm xor bid polynomi commun categori subject descriptor f20 [ analysi algorithm problem complex ] gener j4 [ social behavior scienc ] econom i26 [ artifici intellig ] learn gener term algorithm econom theori introduct combinatori auction agent bundl good rather individu good alon exponenti number bundl number good valu bundl problemat valuat one-shot fashion prohibit expens number good onli moder larg furthermor even hard agent valuat singl bundl ] interest such agent auction protocol few bundl possibl even agent effici valuat still reluct entir cours auction such inform valuabl competitor consider need auction protocol commun inform revel optim alloc good recent work link prefer elicit problem combinatori auction problem unknown function comput theori ] theori goal function variou type queri such function valu input prefer elicit goal enough partial inform prefer abl optim alloc goal learn prefer elicit differ somewhat clear problem share similar structur surpris field relev other exact learn algorithm membership equival queri prefer elicit algorithm valu demand queri elicit algorithm guarante polynomi number valu demand queri here polynomi number good agent size agent valuat function scheme prefer elicit scheme not tradit last paramet complex guarante elicit scheme depend paramet paramet also polynomi worst-cas commun usual not number good agent alon final convers procedur combinatori auction protocol algorithm polynomi monoton dnf linear-threshold function cours one-shot combinatori auction agent entir valuat function onc also polynomi commun size agent valuat onli queri advantag scheme agent black-box increment inform valuat burden agent valuat encod scheme auction s import consider practic also scheme entir revel onli worst-cas now issu incent asid elicit algorithm focu time commun complex prefer elicit regardless incent constraint relationship complex learn prefer elicit relat work zinkevich al ] problem restrict class valuat function read-onc formula toolbox dnf read-onc formula certain substitut complementar opposit toolbox dnf work also theori depend size target valuat read-onc valuat alway succinctli anyway work onli use valu queri quit power demand queri abl elicit scheme gener valuat function blum al ] result complex queri learn prefer elicit model membership equival queri queri learn valu demand queri prefer elicit certain class function effici yet not effici vice-versa contrast work gener yet still quit standard version demand queri type complex prefer elicit complex demand queri equival queri enough inform valuat solut elicit problem nisan segal [ ] commun complex prefer elicit mani rich class valuat worst-cas commun complex optim alloc exponenti result black-box model comput complex model algorithm question agent valuat receiv honest respons insight agent intern valuat fact basic framework theori work also issu commun complex abl algorithm signific commun guarante nisan segal s neg result work need size agent valuat function worst-cas result model queri queri model here exact membership equival queri angluin [ ] model learn algorithm s object exactli unknown target function f x y queri oracl target function function class c algorithm typic domain x subset m rang y subset real number algorithm manifest hypothesi ˜f current estim target function termin hypothesi correct learn algorithm satisfi x f x x ∈ x import represent function c exampl function m f x x consist m s f x otherwis function simpli list valu polynomi · · · xm much succinct choic thu signific impact time space requir learn algorithm size f size encod f respect represent class represent class natur measur size size polynomi number non-zero coeffici polynomi exampl usual onli represent class correspond function class exampl represent class monoton dnf formula function class monoton boolean function type queri commonli exact learn membership equival queri membership queri learner x ∈ x oracl repli f x equival queri learner hypothesi ˜f oracl repli ˜f = f counterexampl x such ˜f x f x equival queri proper size ˜f size f time hypothesi interest effici algorithm follow definit kearn vazirani [ ] definit represent class c polynomialqueri exactli learnabl membership equival queri fix polynomi p · algorithm l access membership equival queri oracl such target function f ∈ c l p size f m function ˜f ∈ c such ˜f x f x instanc x similarli represent class c effici exactli learnabl membership equival queri algorithm l correct hypothesi time p size f m fix polynomi p · here m dimens domain target function also necessarili polynomi depend size f prefer elicit combinatori auction set good m set agent n so sum agent valuat alloc effici econom literatur optim term effici comput effici n = |n| = |m| alloc partit object bundl s1 sn such si ∩ sj = ∅ distinct i j ∈ n let γ set possibl alloc agent i n valuat function vi → ê space possibl bundl valuat vi known class valuat vi valuat class not valuat v ∅ extern vi s1 sn vi si agent n alloc s1 sn γ agent onli bundl valuat condit gener valuations1 often gener valuat addit also agent quasi-linear util function agent util monetari non-monetari compon agent i bundl s price p util ui s p = vi s valuat function vector − non-neg real-valu cours also succinct represent certain valuat class there much research concis bid languag variou type valuat ] classic exampl again later xor bid languag languag agent list atom bid bundl togeth valu valu bundl s bid search bundl s valu atom bid such s ⊆ s then case v s v s learn theori set usual onli bid languag rather valuat class correspond valuat class then exampl xor bid languag class valuat free-dispos condit a ⊆ b ⇒ v ≤ v b size v1 vn èn i=1 size vi size vector valuat size concaten valuat represent respect encod scheme languag analog learn theori represent class polynomi interpret [ ] valu bundl polynomi time valuat function s represent formal represent class bid languag c polynomi interpret algorithm input v ∈ c instanc x ∈ x valu v x time q size v m fix polynomi q · 2 intermedi round iter auction auction inform agent valuat function variou type queri thu set valuat ˜v1 valu function exactli true agent valu exampl upper bound true valu type queri also simpli default random valu inform certain bundl goal prefer elicit problem set valuat such arg max s1 sn i∈n ˜vi si arg max s1 sn i∈n vi si valuat enough inform alloc optim respect true valuat note onli such optim alloc condit free-dispos monoton not point or∗ p = np bid languag np-hard reduct weight set-pack well-studi represent class theori clearli analog or∗ view iter auction learn set mani combinatori auction valuat not explicitli rather simpli histori bid typic queri prefer elicit valu demand queri valu queri auction bundl s ⊆ m agent exact valu bundl v s ] demand queri auction vector non-neg price ∈ ê bundl togeth bundl s agent ‘ ye case s ∈ s ⊆m v s p s otherwis bundl s such v s p s v s p s agent confirm present bundl prefer quot price [ ] 4 note ∅ bundl agent onli ‘ ye util bundl non-neg note also nonlinear price not necessarili price possibl bundl succinct way vector section follow definit queri statement later result definit represent v1 vn polynomial-queri valu demand queri fix polynomi p · algorithm l access valu demand queri agent such v1 vn v1 × × vn l p size v1 vn m alloc s1 sn arg max s1 sn è vi si similarli represent class c effici valu demand queri algorithm l optim alloc commun p size v1 vn m fix polynomi p · key differ here queri definit term exactli valuat function not exactli order optim alloc also effici elicit algorithm polynomi commun rather polynomi time fact commun rather runtim bottleneck elicit optim alloc good even true valuat np-hard wide rang valuat class thu unreason polynomi time definit effici prefer elicit algorithm happi commun complex elicit problem wide signific practic determin ] differ slightli definit blum al demand queri price good price bundl sum price underli good contrast demand queri nonlinear price ie distinct price possibl bundl bound not result winner determin problem np-hard gener valuat mani effici practic rang special purpos algorithm ] off-the-shelf ip solver ] valuat not exactli initi clear polynomi depend size v1 vn justifi set intuit paramet justifi valuat exactli elicit worst-cas next section parallelsbetween equival and demand queri queri learn prefer elicit set manner similar valu membership queri clear analog slightli obviou fact equival demand queri also analog concept lindahl price lindahl price nonlinear non-anonym price bundl nonlinear sens bundl price price not necessarili sum price underli good non-anonym sens agent differ price same bundl good thu lindahl price form pi s s ⊆ m i n lindahl price agent demand queri agent quasi-linear util function bikhchandani ostroy [ ] show alway lindahl price such s1 sn optim alloc onli si ∈ si vi si pi si ∀i ∈ n s1 sn arg max s1 sn i∈n pi si condit state agent bundl util price condit state alloc auction s revenu price scenario condit lindahl equilibrium often competit equilibrium lindahl price optim alloc therefor suffici lindahl price optim alloc alloc lindahl price elicit problem problem optim alloc respect valuat linear program solut integr [ ] dual variabl linear program lindahl price result alloc object function dual program min pi s + i∈n πi πi = max s⊆m ˜vi s pi s = max s1 sn i∈n pi si optim valu πi πs correspond maxim util i respect valuat maxim revenu seller usual rang possibl lindahl price optim alloc agent s valuat fact valid lindahl price maxim lindahl price possibl vector lindahl price maxim lindahl price util auction fact entir social welfar convers price è i∈n πi compon object sum agent util minim lindahl price lindahl price result elicit properti other demand queri maxim lindahl price almost ident equival queri case valuat agent futur work question lindahl price prefer elicit now demand equival queri direct analog first note πi lindahl equilibrium pi s max ˜vi s πi i ∈ n s ⊆ m yield valid lindahl price price agent indiffer bundl posit price satisfi condit thu demand queri also implicitli commun valuat lindahl price typic addit constant away equal follow lemma counterexampl queri demand queri lemma agent repli prefer bundl s bundl s lindahl price p s respect agent s valuat then ˜v s v s s v s proof follow inequ ˜v s p s ˜v s p s ˜v s ˜v s p s p s v s p s v s p s v s v s p s p s inequ price alloc respect valuat inequ agent fact prefer s price respons demand queri case ˜v s v s ˜v s v s inequ contradict thu s s counterexampl agent s valuat final depend size v1 vn elicit problem nisan segal proposit ] park theorem ] show lindahl price necessarili cours prefer elicit protocol optim alloc furthermor nisan segal lemma ] state worst-cas agent price valuat up constant valuat class rich enough dual valuat case interest class lindahl price necessari condit optim alloc lindahl price same inform valuat function worst-cas depend size v1 vn elicit problem entir natur learn to prefer elicit key learn algorithm elicit algorithm equival queri demand valu queri optim alloc lindahl price construct agent ‘ ye demand queri optim alloc analog case agent repli equival queri target function exactli otherwis counterexampl equival queri agent s respons demand queri represent v1 vn polynomial-queri valu demand queri polynomial-queri exactli membership equival queri proof elicit algorithm figur membership queri step valu queri fact ident step agent ‘ ye condit condit comput alloc auction regardless agent true valuat thu optim alloc otherwis si si counterexampl lemma counterexampl valu queri bundl ai respons equival queri procedur worst-cas agent valuat exactli case optim alloc lindahl price agent procedur polynomi number queri a1 polynomial-queri learn algorithm note convers procedur result prefer elicit algorithm not learn algorithm algorithm not simpli valuat exactli then optim alloc rather partial inform valuat valu queri period enough inform alloc agent demand queri possibl lindahl equilibrium valuat v1 vn alloc price valuat ˜vn optim alloc not agent valuat exactli use demand queri equival queri earli halt not properti equival queri valuat commun complex section issu commun complex elicit nisan segal [ ] show varieti rich valuat space such gener submodular valuat worst-cas commun burden lindahl price exponenti number good commun burden term number bit agent auction case discret commun term number real number case continu commun effici algorithm elicit algorithm algorithm queri polynomi paramet size v1 vn represent v1 vn effici valu demand queri effici exactli membership equival queri proof size valu queri o m messag sole queri bundl lindahl price i suffici agent s valuat function valu πi equal note effici learn algorithm never manifest hypothesi superpolynomi size algorithm s runtim then also superpolynomi effici thu valuat size p size vi m polynomi p runtim effici learn algorithm surplu πi i not space q size ˜vi m fix polynomi q chosen represent polynomi interpret thu valu polynomi size also alloc bundl total messag size demand queri p size vi m + q p size vi m m +o m clearli agent s respons valu demand queri size q size vi m + o m valu demand queri respons queri alway polynomi size effici learn algorithm polynomi number queri total commun elicit algorithm polynomi relev paramet often explicit bound number membership equival queri learn algorithm constant not big-o notat bound bound number valu demand queri elicit algorithm size hypothesi runtim algorithm theorem like abl much practic equival queri proper size ˜f size f time queri learn algorithm s equival queri proper then also possibl tight bound commun requir elicit algorithm show elicit algorithm size v1 vn paramet sidestep nisan segal s ] neg result worst-cas commun complex effici alloc problem guarante respect size instanc valuat function run algorithm algorithm well chosen represent class succinct represent common valuat thu focu back compact yet express bid languag issu applic section applic method particular represent class combinatori valuat prefer elicit problem valuat class v1 vn exact algorithm a1 valuat class v1 vn respect loop signal run a1 parallel respect agent respons equival queri agent s exact valuat optim alloc s1 sn lindahl price respect valuat ˜vn so far alloc price agent form demand queri ‘ ye output alloc halt agent i prefer bundl si perform valu queri si si counterexampl ai figur algorithm elicit algorithm problem effici learn algorithm class separ signific alreadi algorithm wealth function class often learn separ prefer elicit problem directli elicit algorithm agent s valuat learn algorithm togeth demand queri stage algorithm-independ way algorithm polynomi monoton dnf formula linear-threshold function prefer elicit algorithm gener valuat valuat free-dispos valuat substitut respect represent polynomi interpret comput learn theori literatur heavi emphasi comput tractabl ] method express succinct represent class represent class combinatori auction term bid languag necessarili express enough possibl valuat interest also succinctli simplest common function class polynomi represent schapir selli [ ] learn algorithm spars multivari polynomi basi combinatori auction protocol equival queri algorithm proper specif algorithm represent class t-spars multivari polynomi real number variabl valu t-spars polynomi t term term product variabl eg x1x3x4 polynomi real number coeffici real number polynomi express valuat function v ê+ uniqu polynomi [ ] idea succinct polynomi bid languag addit single-item valuat nisan [ ] addit valuat valu bundl number good bundl single-item valuat bundl valu ∅ valu ie agent as soon singl item not hard single-item valuat polynomi size − polynomi size m suffic addit valuat polynomi thu appropri valuat mostli addit few substitut complementar coeffici learn algorithm polynomi mti +2 equival queri mti +1 t2 i membership queri agent i ti sparciti polynomi vi ] therefor algorithm gener valuat polynomi number queri polynomi communication6 xor represent xor bid languag combinatori auction literatur xor bid set bundl b valu function w b → ê+ bundl valuat function v b b ∈b | b ⊆b w b xor bid valuat free-dispos onli such valuat again properti a ⊆ b ⇒ v ≤ v b xor bid languag slightli express polynomi polynomi valuat not free-dispos howev xor as express econom set nisan ] note xor bid single-item valuat m atom bid − atom bid addit valuat opposit polynomi languag incompar succinct somewhat complementari practic use blum al ] note monoton dnf formula analog xor bid learn theori literatur monoton dnf formula disjunct conjunct variabl unneg exampl x1x2 ∨ x3 ∨ x2x4x5 note such formula xor bid atom bid valu thu xor bid monoton dnf formula boolean real-valu function insight classic learn algorithm monoton dnf ] theorem note theorem appli even valuat not free-dispos ] theorem b learn algorithm xor lemma xor bid t atom bid exactli t equival queri tm membership queri proof algorithm atom bid target xor bid turn valuat ˜v bid ident bundl xor bid atom bid present ˜v equival queri respons ‘ ye bundl s v s ˜v s bundl t first t = s item i t check membership queri v t v t − so t = t − i otherwis leav t next item t v t atom bid target xor bid item i t t v t − note point t ¯t such t ⊆ ¯t ⊆ s v ¯t v ¯t − i ¯t note v s v ¯t v t valu bundl s process item now v t v t − then v ¯t v t v t − − free-dispos t − i ⊆ ¯t − i thu v t v t − item t t v t atom bid v not case t maximum valu strict subset definit xor bid v t max i∈t max t ⊆t − i v t max i∈t v t − t contradict now v t ˜v t t v t not atom bid hypothesi induct atom bid r ˜v r so far inde atom bid v r inde atom bid v valu v r ˜v r assumpt vacuous valuat notat ˜w hypothesi b w target function ⊆ b ˜w b = w b b ∈ ˜b assumpt thu ˜v s max b∈ ˜b | b⊆ ˜w b max b∈ ˜b | b⊆ w b max b∈b | b⊆ w b = v s now v t ˜v t then ˜v t v t v s ˜v s second equal fact valu constant s last inequ s counterexampl valuat equat free-dispos algorithm also basi zinkevich al s [ ] elicit algorithm toolbox dnf toolbox dnf polynomi non-neg coeffici represent equival queri valu queri bundl good t ˜v s then again equat v s ˜v s fact t ˜v t thu t v t not current hypothesi atom bid correctli ˜v t v t induct hypothesi t v t hypothesi process addit equival queri atom bid equival queri atom bid m membership queri counterexampl discoveri new atom bid tm membership queri exactli + equival queri number time step algorithm essenti same number queri algorithm effici theorem follow corollari represent class xor bid effici valu demand queri blum al s neg result [ ] theorem monoton dnf henc xor bid not effici demand queri anonym price good linear-threshold represent polynomi xor bid languag or bid languag such xor-of-or or-of-xor or∗ succinctli major valuat ] valuat bundl valu m/2 item valu otherwis gener r-of- famili valuat bundl valu r item set item s ⊆ m valu otherwis major valuat special case r-of- valuat r = m/2 s = m valuat appropri substitut onc requir set item other item valu k = |s| such valuat succinctli r-of-k threshold function function form linear inequ xi1 + + xik ≥ r function valu inequ otherwis here i1 item s littleston s winnow algorithm such function equival queri onli + + ln m queri ] guarante r algorithm s k unknown elicit result winnow use demand onli valu queri not necessari here valu counterexampl onli possibl valu note r-of-k threshold function alway succinctli o m space algorithm such function polynomi number queri polynomi commun paramet alon conclus futur work exact algorithm membership equival queri basi prefer elicit valu demand queri heart result fact demand queri modifi equival queri problem prefer elicit result wealth avail algorithm problem prefer elicit learn approach elicit also differ approach elicit algorithm neatli agent type design known type prefer agent like mostli mani substitut algorithm agent valuat elicit scheme elicit algorithm polynomi number queri polynomi commun origin learn algorithm effici not agent valuat valu demand queri equival queri onli onli point optim alloc prefer elicit problem impli elicit valu demand queri membership equival queri not asymptot improv learn algorithm complex exampl valuat class elicit blum al ] provid exampl membership/valu queri onli theorem futur work issu incent algorithm elicit algorithm learn set usual oracl respons queri elicit set agent usual selfish possibl respons so util also algorithm polynomi xor bid elicit algorithm perform other combinatori auction protocol ] interest question here lindahl price maxim rang order inform revel inform revel maxim lindahl price name demand queri away equival queri final use or∗ bid languag ] effici henc languag s express succinct wide varieti valuat class acknowledg debasi mishra help discuss work part nsf grant iis0238147 