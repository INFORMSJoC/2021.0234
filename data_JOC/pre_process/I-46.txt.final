new class represent model tempor strateg epistem properti agent team represent main idea interpret system halpern fagin al howev also modular compact way concurr program also preliminari result model alternating-tim tempor logic natur class model categori subject descriptor i211 [ artifici intellig ] artifici intelligencemultiag system i24 [ artifici intellig ] knowledg represent formal methods-mod logic gener term theori logic foundat multi-ag system much attent recent year logic reason eg knowledg ] time [ ] cooper strateg abil ] late amount research level represent languag model such logic mainli need compact represent represent close actual system multi-ag system open system sens interact environ onli partial advanc thu represent model multi-ag system modular sens compon such agent major chang represent whole model howev paper few represent languag modular compact comput hand properti knowledg strateg abil other paper new class represent model open multi-ag system modular compact implicit methodolog actual system structur paper first section background work logic combin time knowledg strategi precis modal logic branch time knowledg strategi incomplet inform comput tree logic ctl then ctlk then variant alternating-tim tempor logic atl perfect imperfect inform case semant logic one section usual explicit model kripk possibl global state system howev state thing mostli too mani even simpl system thu usual represent compact reason special class model gener kripk structur not alway enough help term methodolog stage design implement semant ground sens correspond element model entiti immedi section overview represent model system time action possibl knowledg import especi represent theoret analysi compact and/or represent tempor model not role satisfactori way agent strategi final section framework modular system mi pictur somewhat surpris hypothesi model abil imperfect inform mi comput model perfect inform now almost complex result distinctli favor perfect inform strategi other indiffer logic time knowledg and strateg abil first logic ctl ctlk atl atlir point studi branch time ctl comput logic ctl [ ] oper tempor properti system ie path quantifi e path togeth tempor oper f next state alway now u occurr tempor oper immedi exactli path quantifi variant languag sometim vanilla ctl π set atom proposit typic element p ctl formula ϕ ϕ := p | ¬ϕ | ϕ ∧ ϕ | e | e2ϕ | eϕ u ϕ semant ctl kripk model m = st r π nonempti set state st state transit relat r ⊆ st × st valuat proposit π π → p st path λ m refer possibl behavior comput system m infinit sequenc state such qirqi+1 i ith state λ λ [ i ] q-path path q interpret formula state q model m m q |= p iff q ∈ π p m q |= ¬ϕ iff m q |= ϕ m q |= ϕ ∧ ψ iff m q |= ϕ m q |= ψ m q |= e fϕ iff q-path λ such m λ ] |= ϕ m q |= e2ϕ iff q-path λ such m λ [ i |= ϕ i m q |= eϕ u ψ iff q-path λ i such m λ [ i |= ψ m λ [ j ] |= ϕ ≤ j < i knowledg ctlk ctlk ] straightforward combin ctl standard epistem logic ] agt = set agent typic element a epistem logic oper agent knowledg kaϕ agent ϕ model ctlk model ctl epistem indistinguish relat st × st agent ∼a equival semant epistem oper m q |= kaϕ iff m q |= ϕ q such ∼a q note agent knowledg implicitli agent imperfect inform actual current state world notion knowledg trivial not influenc way evolut system singl unit import particular agent strategi fore agent strategi atl alternating-tim tempor logic atl ] logic tempor strateg properti open comput system multi-ag system particular languag atl follow formula ϕ := p | ¬ϕ | ϕ ∧ ϕ a fϕ | a ϕ u ϕ a ⊆ agt inform a ϕ collect strategi ϕ ctl path quantifi a e ∅ agt respect semant atl so concurr game structur cgss cg tupl m = agt st act d o π π addit oper a path sometim futur usual way set agt = agent st state valuat proposit π π → p st act atom action function d agt × st → p act action avail ∈ agt state q ∈ st final determinist transit function state q ∈ st action profil α1 αk ∈ actk αi ∈ d i q state q = o q α1 αk memoryless strategi agent function sa st → act such sa q ∈ d q collect strategi sa team a ⊆ agt individu strategi agent ∈ a final outcom strategi sa state q set comput sa q q sa λ = q0q1q2 | q0 = q i αi−1 k such = sa qi−1 a ∈ d qi−1 a o qi−1 αi−1 αi−1 k = qi semant cooper modal m q a fϕ iff collect strategi sa such λ q sa m λ ] |= ϕ m q iff there sa such λ q sa m λ [ i i m q a ϕ u ψ iff there sa such λ q sa i ≥ m λ [ i |= ψ m λ [ j ] |= ϕ ≤ j < i agent imperfect inform atlir atl not incomplet inform scope logic agent alway complet knowledg current state whole system atlir ] same formula atl cooper modal subscript ir agent imperfect inform imperfect recal formal recurs definit atlir formula ϕ := p | ¬ϕ | ϕ ∧ ϕ a ir fϕ ir2ϕ | a irϕ u ϕ model atlir concurr epistem game structur ceg tupl m = agt st act d o ∼1 π π agt st act d o π π cg ∼1 epistem equival relat agent same choic indistinguish state q ∼a q impli q = d q atlir strategi agent strategi ie function st → act such sa q ∈ d q q ∼a q then q = sa q collect strategi uniform onli uniform individu strategi again function q sa set path agent a collect strategi sa state q semant atlir formula m q a ir fϕ iff uniform collect strategi sa such ∈ a q such ∼a q λ sa q m λ ] |= ϕ deviat origin semant atl [ ] strategi agent choic sequenc state agent definit whole histori game choic notion strategi semant full atl ∗ atl extens eg game imperfect inform type strategi equival semant pure atl cf ] sixth intl joint conf autonom agent multi-ag system aama m q a ir2ϕ iff there sa such ∈ a q such ∼a q λ sa q m λ [ i i m q a irϕ u ψ iff there sa such ∈ a q such ∼a q λ sa q i m λ [ i |= ψ m λ [ j ] |= ϕ ≤ j < i a irϕ uniform collect strategi such path possibl execut strategi agent a ϕ case model model check section variou represent system model check import point refer case formal logic semant phenomenon gener domain often real world aim represent reason close real world suffici compact still not too far away formal easili theoret analysi comput problem merit explicit case transit system concurr game structur cegss previou section explicit model obvious advantag explicit model veri close semant logic simpli semant other hand mani way difficult actual system • exponenti size tempor model usual exponenti number state respect higher-level descript eg boolean variabl n-ari attribut also size exponenti number process agent evolut system result joint synchron asynchron action sever activ entiti ] cgss situat even here also number transit exponenti even number states3 practic such represent veri seldom scalabl • explicit model modular state model refer global state system transit model correspond global transit as well atom way everyth singl step regardless way • logic atl often framework open comput system ideal element system as littl interdepend possibl much hassl instanc variou design implement activ compon case multi-ag system class atl model transit system ] repres transit succinct way still exponenti mani state at number transit simpli quadrat wrt state ctl model unfortun at even modular harder concurr game structur not easili incomplet inform cf ] need perhap even obviou not onli variou design singl agent overal architectur usual also eg increas number agent environ necessarili design whole system unfortun atl model anyth open sens theoret complex result explicit model model ctl ctlk p-complet time o ml m number transit model l length formula ] altern time o n2 l n number state model atl p-complet wrt m l -complet wrt n k l number agent ] model atlir δp wrt m l -complet wrt n k l ] compress represent explicit represent state transit ineffici mani way altern state/transit space symbol way [ ] such model hope feasibl model properti open/multi-ag system well compact onli fraction cases4 howev insuffici reason mere optim represent explicit model thu open implement rather design methodolog interpret system system ] mani prime exampl comput model distribut system interpret system tupl is = st1 stk stenv r π st1 stk local state space agent stenv set state environ set global state st = st1 × stk × stenv r ⊆ st × st transit relat π π → p st transit relat possibl evolut system time epistem dimens local compon global state q1 qk qenv ∼i q1 qk iff qi = qi easi represent modular compact as far state moreov natur approach intuit methodolog epistem state unfortun way transit interpret system compact modular tempor aspect system joint transit function exactli explicit model not reason activ agent too much not interact framework interact interest thing here bottom line tempor dimens interpret system exponenti represent almost difficult compon interpret system ordinari ctl atl model local activ agent complet interact rest system concurr program idea concurr program long literatur distribut system here formul ] concurr program p k concurr transit system pi = sti acti ri πi πi sti set local state process represent r explicit model m compact size r logarithm respect size m sixth intl joint conf autonom agent multi-ag system aama i acti set local action ri ⊆ sti ×acti ×sti transit relat πi set local proposit valuat behavior program p product automaton p1 pk assumpt work asynchron action synchron common action name concurr program sever advantag first modular compact local model compon much so system not onli also action local here moreov explicit interact local transit reactiv process will commun synchron other hand not implicit incident not entir benevol interact process exampl act somebodi push object explicitli action somewhat ridicul side effect action also not easi still minor complaint context ctl tempor logic onli interest flow transit not underli action tempor k asynchron process implicit interact concurr program just perfect situat differ autonom proactiv compon agent togeth cooper advers common environ strategi abil now particular action import result transit action other agent local state consent side effect other agent state messag procedur onli way interact agent moreov avail action agent not action other agent same time outcom state action final often agent act synchron particular agent simultan concurr game structur synchroni autonomi action synchron no longer mean coordin represent veri much concurr program agent synchron sophist interact agent action first postul easi follow section second section model ctl concurr program pspace-complet number local state length formula ] synchron cp simpl reactiv modul semant atl synchron model avail action not action current other player slightli differ variant concurr program synchron product program agent simultaneously5 unfortun such interpret direct interact agent action definit synchron concurr program k concurr pi = sti acti ri πi πi follow5 concept not new cours alreadi folk knowledg explicit definit literatur cg agt = st = qk i=1 sti act = sk i=1 acti d i q1 qk αi | qi αi qi ∈ ri qi ∈ sti q1 qk α1 αk = q1 such qi αi qi ∈ ri i sk i=1 πi π p = πi p p ∈ πi simpl reactiv modul srml ] particular implement synchron concurr program definit srml system tupl σ π m1 mk σ = k set modul agent set boolean variabl i σ = ctri initi updatei ctri ⊆ π set initi updatei consist guard command form φ v1 = ψ1 vk = ψk vj ∈ ctri φ ψ1 proposit formula π ctr1 ctrk partit idea agent i variabl init command control variabl updat command valu round guard command guard φ true current state system round enabl updat command ψj current state system logic valu sever command same time model non-determinist choic model atl srml exptimecomplet size model length formula ] concurr epistem program concurr program asynchron synchron epistem relat too exactli same way interpret system [ ] concurr program model ctlk atlir q1 qk ∼i q1 iff qi = qi model ctlk concurr epistem program pspace-complet [ ] srml also same way then agent onli variabl concurr epistem program modular ground semant usual compact not alway exampl agent perfect inform alway size such program still problem concurr program perfect inform section limit interact compon avail local action actual transit etc problem alreadi import agent perfect inform even crucial agent onli limit knowledg current situat import applic logic strateg epistem properti verif commun protocol eg context secur now agent abil inform anybodi els messag point action intercept definit just protocol transit success intercept never so avail action independ action other agent incomplet inform other hand interact arguabl interest featur multi-ag system realli hard model strategic-epistem logic not possibl commun reactiv modul reactiv modul ] refin concurr epistem program primarili mocha model checker ] much power express sixth intl joint conf autonom agent multi-ag system aama alreadi veri limit variant rml srml vocabulari rml veri close implement term gener comput system modul essenti collect variabl state just valuat variabl events/act variabl updat howev set variabl differ agent time etc moreov reactiv modul incomplet inform observ variabl not main focu rml again relationship set observ variabl set control variabl mostli design system agent synchron as well asynchron rml power framework system variou kind synchroni asynchroni howev still need simpler slightli abstract class represent first framework rml technic number auxiliari concept definit second not alway conveni multi-ag system from/to program variabl view multi-ag system arguabl close comput implement usual rather distant real world domainh need abstract conceptu flexibl framework third separ local complex complex interact not straightforward new propos spirit interpret system observ start point framework section modular interpret system idea distribut system multi-ag system even so sever loos coupl compon process compon local onli small fraction process compon interact crucial concurr program insuffici model tool usual much agent s resourc local comput explicit transit tabl cg ceg system overkil modular interpret system here model idea interpret system way tight control interact complex definit modular interpret system mi tupl s = agt env act agt = a1 ak set agent env environ act set action set symbol interact alphabet agent follow intern structur ai = sti di outi ini oi πi πi • sti set local state • di sti → p act local avail action conveni notat addit set situat action di = qi α | qi ∈ sti α ∈ di qi • outi ini interact function outi di → refer influenc action agent ai possibl extern world ini sti ×ink → translat extern manifest other agent environ impress ai s transit function local state ai • oi di × → sti determinist local transit function • πi set local proposit agent ai πi πj disjunct i j • πi πi → p sti valuat proposit environ env = stenv outenv inenv oenv πenv πenv same structur agent not action thu outenv stenv → oenv stenv × → stenv framework action actor agent consequ actor explicitli mi agent just case cg ceg environ other hand passiv context agent action practic aspect global state not observ agent input function fragil spot here explicitli tabl size exponenti wrt number agent wrt size howev construct similar ] interact function compactli definit implicit input function state q ∈ sti sequenc ϕ1 η1 ηn ∈ interact symbol ϕj boolean combin proposit ˆηi η ∈ ˆηi η symbol current agent i input function now ini env ηj iff j index such ˆk k ˆenv env |= ϕj ϕn ≡ map effect ini implicit input function ϕj polynomi size respect number interact symbol cf ] note domain mi represent system exponenti mani symbol interact alphabet such case problem inher domain ini size exponenti number agent agent system mi let stg = qk i=1 sti ×stenv set possibl global state modular interpret system s definit unfold mi s initi state q ⊆ stg ceg ceg s q = agt st π π act d o ∼1 • agt = act = act • st set global state stg reachabl state q transit relat o • π = sk i=1 πi ∪ πenv • q = q1 qk qenv ∈ st q ∈ π p iff p ∈ πi qi ∈ πi p • d i q = di qi global state q = q1 qk qenv transit function q = q1 qk qenv ∈ st α = α1 action profil st ∈ d i q inputi q α ini qi out1 q1 α1 qi−1 αi−1 qi+1 αi+1 qk αk qenv ´ agent i k inputenv q α inenv qenv out1 q1 α1 qk αk ´ then q α o1 q1 α1 input1 q α ok qk αk inputk q α qenv inputenv q α sixth intl joint conf autonom agent multi-ag system aama • i k q1 qk qenv ∼i q1 qk iff qi = qi 6 remark note miss represent cgss too case epistem relat ∼i simpli unfold unfold mi s initi state cg cg s q state modular system represent explicit model multi-ag system other hand represent not alway proposit ceg m mi sm set global state q sm such ceg sm q isomorph m7 proof m = k st act d o π π ∼1 ∼k ceg mi sm = a1 ak env act agent = sti di outi ini oi πi πi environ env = stenv outenv inenv oenv πenv πenv set q ⊆ stg global state • = act ∪ st ∪ actk−1 × st • sti = [ q ∼i | q ∈ st ≤ i k sti set i s indistinguish class m • stenv = st • q ] ∼i d i q ≤ i k well-defin d i q = d i q ∼i q • outi [ q ] ∼i αi αi ≤ i k q = q ini [ q ] ∼i α1 αi+1 qenv = α1 αi+1 qenv i ∈ k inenv q α1 αk = α1 αk ini x inenv x arbitrari other argument • oi [ q ] ∼i αi α1 αi+1 qenv [ o qenv α1 αk ∼i ≤ i k αi ∈ di [ q ] ∼i q α1 αk = o q α1 αk oi oenv arbitrari other argument • πi = ∅ ≤ i k πenv = π • πenv p = π p q = [ q ] ∼1 [ q ] ∼k q q ∈ st let m = ceg sm q = agt st act d o π π ∼1 ∼k m m isomorph oneto-on correspond respect set state other part structur state first ˆq = [ q ] ∼1 [ q ] ∼k q ∈ q α = α1 such ∈ d i ˆq α [ q ] ∼1 [ q ] ∼k q q = o q α ˆq = o α now i inputi α ini [ q ] ∼i out1 [ q ] ∼1 α1 q ] ∼i−1 αi−1 q ] ∼i+1 αi+1 q ] ∼k αk q ini [ q ] ∼i α1 αi+1 differ environ agent environ not knowledg ceg isomorph onli name state and/or action q = α1 αi+1 q similarli inputenv α = α1 αk thu o α o1 [ q ] ∼1 α1 input1 α ok [ q ] ∼k αk inputk α q inputenv α [ o q α1 αk ] ∼1 [ o q α1 αk ] ∼k o q α1 αk thu ˆq = [ q ] ∼1 [ q ] ∼k q q = o q α1 αk proof now st = q clearli q ⊆ st ˆq ∈ st ˆq ∈ q argument induct length o path q base case ˆq ∈ q immedi induct step ˆq = o α ˆq ∈ q then ∈ q thu st = q now one-to-on correspond st st r ∈ st r ] ∼1 [ r ] ∼k r ∈ st other part structur m m state • agt = agt • act = act • π = sk i=1 πi ∪ πenv = π • p ∈ π = π [ q ] ∼1 [ q ] ∼k q ∈ π p iff q ∈ πenv p iff q ∈ π p same valuat state • d i [ q ] ∼1 [ q ] ∼k q = di [ q ] ∼i d i q immedi fact q = st o [ q ] ∼1 [ q ] ∼k q α [ r ] ∼1 [ r ] ∼k r iff o q α r transit same joint action state state • [ q ] ∼1 [ q ] ∼k q ∼i [ r ] ∼1 [ r ] ∼k r iff [ q ] ∼i = [ r ] ∼i iff q ∼i r access relat state proof corollari ceg m atlir-equival mi s initi state q state q m state q ceg s q exactli same atlir formula vice versa proposit cg m mi sm set global state q sm such cg sm q isomorph m proof m = agt st act d o π π now ˆm = agt st act d o π π ∼1 ∼k arbitrari access relat st proposit mi s ˆm global state such = ceg s ˆm q isomorph m cg access relat ˆm clearli m isomorph m corollari cg m atl-equival mi s initi state q state q m state q cg s q exactli same atl formula vice versa proposit local state space mi not alway respect underli concurr epistem game structur proof ceg m agent i alway perfect inform current global state system modular interpret system s such m = ceg s q sti isomorph st sixth intl joint conf autonom agent multi-ag system aama abov properti part interpret system heritag next proposit fact explicit model system intens interact agent proposit size s gener exponenti respect number local state local action case even epistem relat not relev s represent ordinari cg proof cg m agent agt = global state st = qk i=1 qi i action act = everywher transit function o q1 j1 qk jk α1 αk q1 l1 qk lk li = ji + α1 + + αk mod i note m modular interpret system succinct local state space sti = qi i still current action agent relev local transit agent i item interact layer modular interpret system s other element s local layer mi paper ultim interest model complex respect size local layer end size interact layer polynomi number local state action note proposit not explicit model submit represent mi still begin section mainli interest model framework system loos coupl compon interact essenti process local anyway importantli framework mi interact agent local structur extent moreov complex layer finer way befor first complex layer eg paper other layer certain complex bound second also separ interact complex differ agent modular system vs simpl reactiv modul section simpl reactiv modul alreadi specif somewhat limit implement modular interpret system first quit strong notion equival represent definit represent equival concurr epistem game structur cgs-equival same cg proposit srml cgs-equival mi proof srml r k modul n variabl s = agt act agt = a1 ak act = n ⊥1 = sk i=1 sti × sti local state space sti moment loss gener ctri = x1 xr also command i type γi ψ ψ = γ⊥ i ψ ψ = ⊥ now agent ai s follow compon sti = p ctri local state ai valuat variabl i qi r ⊥1 ⊥r qi α = qi qi ini qi q1 q1 qi−1 qi−1 qi+1 qi+1 qk qk xi ∈ ctri | q1 qk |= w γi ψ ψ xi ∈ ctri | q1 qk |= w γ⊥ i ψ ψ local transit case t = f = ∅ updat then oi qi α t f qi action α t = ∅ arbitrari ˆx ∈ t oi qi j t f qi ∪ xj ∈ t qi ∪ otherwis ⊥j t f qi \ xj ∈ f qi ∪ otherwis moreov t = ∅ = f arbitrari ˆx ∈ f oi qi j t f qi ∪ xj ∈ t qi \ otherwis ⊥j t f qi \ xj ∈ f qi \ otherwis final πi = ctri qi ∈ πi xj iff xj ∈ qi abov construct srml compact represent state mi ri local variabl agent i rise local state way reactiv modul simpl full two-level represent first system product modul next modul product variabl togeth updat oper note howev specif updat respect singl variabl srml guard command total length o pk i=1 ri thu represent transit srml case compact mi two-level structur srml final mi gener srml current action other agent influenc outcom agent i s current action outcom other agent current local state model check modular system main aim complex symbol model atlir meaning way review remark state complex result onli conjectur preliminari proof [ ] conjectur model atl modular interpret system exptime-complet conjectur model atlir class modular interpret system pspace-complet summari complex result model tempor strateg logic epistem compon tabl tabl present complet result variou model set input paramet symbol n k m stand number state agent transit explicit model length formula nlocal number local state concurr program modular interpret system new result paper ital note result model atl modular interpret system extens result ] m l n k l nlocal k l ctl p ] p ] pspace [ ] ctlk p [ ] p [ ] pspace [ ] atl p ] [ ] exptim atlir [ ] [ ] pspace right then result atl atlir intrigu pattern model agent perfect imperfect inform first problem much explicit model number transit next same complex class explicit model number state agent final model imperfect inform model perfect inform modular system so first mi ceg cg differ way first case mi epistem relat explicitli agent perfect almost perfect inform latter case epistem sixth intl joint conf autonom agent multi-ag system aama aspect extra room transit relat effici crucial factor number avail strategi rel size input paramet number strategi exponenti number global state uniform strategi usual much still exponenti mani gener thu fact perfect inform strategi increment substanti impact complex problem howev term local state agent number strategi doubli exponenti onli exponenti mani uniform strategi result favor imperfect inform conclus new class represent open multiag system represent modular interpret system modular sens compon as littl chang whole represent possibl compact tradit explicit represent sens correspond primit model entiti immedi methodolog system also complex model strateg abil represent perfect inform imperfect inform solut paper not necessarili exampl impress function main sourc non-modular mi perhap step right direct also not represent elabor model languag promela reactiv modul onli need compact modular reason model express concurr epistem program still theoret analysi reactiv modul also mi better simpl multi-ag domain especi human-ori computer-ori design anonym review andrzej tarlecki help remark thoma ågotn work paper grant research council norway 