often outcom basi prefer group agent key difficulti agent prefer insincer chosen outcom favor mechan design art rule game so agent prefer truth desir outcom recent approach-cal autom mechan design-a mechan prefer aggreg hand sever advantag downsid mechan design optim problem anew time work autom mechan design benevol design paper mechan design problem design self-interest case center onli outcom payment reason agent prefer relev center agent as well agent not mechan set optim determinist mechan np-complet import special case center interest onli payment payment not possibl center interest onli outcom chosen then random mechan problem set comput easi final payment-maxim amd problem close interest variant optim combinatori auction design problem bidder best-onli prefer here too optim determinist auction npcomplet optim random auction easi categori subject descriptor f2 [ theori comput ] analysi algorithm problem complex j4 [ comput applic ] social behavior sciences-econom gener term algorithm econom theori introduct multiag set often outcom basi prefer group agent such outcom potenti presid joint plan alloc good resourc prefer aggreg gener not agent priori agent prefer coordin unfortun agent incent prefer order mechan outcom desir agent outcom agent prefer truth such manipul undesir prefer aggreg mechan prefer social desir way agent prefer insincer social undesir outcom manipul pervas problem prefer aggreg mechan semin neg result gibbard-satterthwait theorem nondictatori prefer aggreg scheme possibl outcom prefer agent untruth [ ] prefer aggreg scheme dictatori agent outcom matter other agent report aggreg prefer aggreg mechan self-interest agent prefer truth mechan outcom desir perspect object classic set mechan design game theori paper case design self-interest design not directli out132 come agent prefer rather concern own agenda outcom payment mechan design relev electron commerc case mechan design interest notion social welfar import agent prefer clear perhap obviou design self-interest object not directli agent prefer reason often agent prefer limit design outcom payment common such constraint individu ration ir mechan not agent agent not mechan instanc set optim auction design design auction onli much revenu not se well alloc good good agent prefer nevertheless design not agent valuat bundl good therefor even self-interest design outcom agent reason well other hand design not necessarili social welfar outcom exampl design alway outcom social welfar respect prefer forc agent differ util now util not mechan easi agent incent preferences-and actual revenu inde counterintuit result optim auction design theori sometim good even auction reserv price classic mechan design gener mechan certain assumpt notion nonmanipul object upsid mechan not even inform agent prefer eg vickrey-clarke-grov vcg mechan ] easili probabl distribut prefer eg dagva mechan ] myerson auction ] maskin-riley multi-unit auction ] howev gener mechan also signific downsid famou broadli applic gener mechan vcg dagva onli social welfar design self-interest case mani electron commerc set mechan not design s object gener mechan selfinterest design onli applic veri restrict settings-such myerson s revenu auction singl item maskin riley s revenu auction multipl ident unit item even restrict set mechan appli mechan onli payment maxim practic design also interest outcom se exampl auction bidder item often side payment agent incent not alway practic exampl barter-bas electron marketplaces-such recipco firstbartercom barteron intagio-sid payment not furthermor softwar agent desir mechan not abil payment mani softwar agent not infrastructur payment contrast recent approach mechan automat specif problem hand approach downsid abov mechan design problem optim problem input number agent agent possibl type prefer aggreg s prior distribut agent type output nonmanipul mechan optim respect object approach autom mechan design autom mechan design approach advantag classic approach gener mechan first even set not assumpt classic mechan such avail side payment object social welfar second imposs result such gibbard-satterthwait theorem state mechan desir prefer mechan set hand not not gener third mechan term nonmanipul guarante outcom classic mechan mechan particular set probabilist inform design agent type vast amount inform parti other today approach like tremend save classic mechan larg inform exampl compani automat procur mechan statist knowledg supplier rather classic descend procur auction fourth burden design human machin howev mechan design mechan design optim problem anew set henc comput complex key issu previou research question benevol designers-that wish exampl social welfar [ ] paper comput complex autom mechan design case self-interest design import set autom mechan design due shortag gener mechan area fact e-commerc set design self-interest also problem close particular optim revenue-maxim combinatori auction design problem rest paper section focu nonmanipul mechan section problem section optim determinist mechan np-complet even design onli payment section optim determinist mechan also np-complet payment not possibl design onli interest outcom chosen section optim random mechan polynomi time even gener case final section optim combinatori auction best-onli prefer result amd impli problem np-complet determinist auction easi random auction the focu on nonmanipul mechan comput problem autom mechan design focu nonmanipul mechan not immedi obviou manipul mechan even agent type strateg henc sometim untruth still outcom nonmanipul mechan howev case mechan nonmanipul mechan perform ident interfac layer agent origin mechan agent prefer type interfac layer subsequ interfac layer origin mechan type agent strateg origin mechan type as interfac layer outcom outcom new mechan interfac layer strateg agent s behalf never incent fals interfac layer henc type interfac layer strateg type interfac layer result exactli origin mechan argument mechan design literatur revel principl ] comput difficulti revel principl larg combinatori outcom type space ] howev here flatli outcom type space not concern here truth mechan rest paper now autom mechan design definit autom mechan design set finit set outcom o finit set n agent • agent i finit set type θi probabl distribut γi θi case correl type singl joint distribut γ θ1 × × θn util function ui θi × o → r object function expect design mani possibl object function design exampl social welfar design sum agent util minimum util agent design util agent case design benevol design sens agent collect happi howev paper case self-interest design self-interest design onli outcom chosen design not outcom agent prefer rather prefer outcom net payment agent design definit self-interest design object function g n i=1 πi g o → r design own prefer outcom πi payment agent i case g everywher design payment case payment not possibl g object function now kind mechan studi revel principl attent direct revel mechan agent type directli never incent definit follow kind mechan a determinist mechan payment consist outcom select function o θ1 × θ2 × × θn → o random mechan payment consist distribut select function p θ1 × θ2 × × θn → p o p o set probabl distribut o a determinist mechan payment consist outcom select function o θ1 ×θ2 × ×θn → o agent i payment select function πi θ1 × θ2 × × θn → r πi θ1 θn payment agent i type θ1 θn standard game theori notat ] fact agent util function type perhap type variou possibl prefer agent agent s type not aggreg util function common knowledg agent s type paramet agent s util function aggreg not agent s util agent s type a mechan payment consist distribut select function p θ1 × θ2 × × θn → p o agent i payment select function πi θ1 × θ2 × × θn → r2 type constraint design mechan individu ration ir first type constraint util agent as great agent s fallback util util agent not mechan agent not mechanism-and agent s particip ever mechan design s object mechan agent agent not there furthermor such constraint design simpli agent infinit amount type constraint ir individu ration constraint differ possibl ir constraint ex ant interim post agent own type other type mechan ex ant ir agent noth not even own type not concept paper ex interim ir agent alway onli own type not other ex post ir agent alway even everybodi s type latter notion ir formal first concept fallback outcom agent s fallback util type loss gener constant term agent s util function type decision-mak behavior expect util agent ] definit autom mechan design ir constraint fallback outcom o0 ∈ o agent i type θi ∈ θi ui θi o0 addit case self-interest design g now notion individu ration definit individu ration ir a determinist mechan ex interim ir agent i type θi ∈ θi e θ1  θi−1 θi+1  θn [ ui  θn  θn random mechan ex interim ir agent i type θi ∈ θi e θ1  θi−1 θi+1  θn |θi eo|θ1  θn [ ui  θn a determinist mechan ex post ir agent i type vector θ1 θn θ1 × × θn ui θi o θ1 θn θn not payment as long agent design risk neutral respect payment util linear payment reason payment random mechan ex post ir agent i type vector θ1 θn θ1 × × θn eo|θ1  θn [ ui  θn term payment case payment not possibl incent compat ic second type constraint agent never incent type revel principl type constraint common variant solut concept implement domin strategi implement bayes-nash equilibrium definit autom mechan design set mechan outcom payment function domin strategi truthtel alway optim even type other agent alreadi formal agent i type vector θ1 θi θn θ1 × × θi × × θn altern type report ˆθi ∈ θi case determinist mechan ui θi o θ1 θi θn θi θn ≥ ui ˆθi θn ˆθi θn case random mechan eo|θ1  θi  θn [ ui θi θn ≥ eo|θ1  ˆθi  θn [ ui ˆθi θn ] term payment case payment not possibl thu domin strategi implement optim regardless other agent report optim onli other agent truth not other agent type bayes-nash equilibrium definit autom mechan design set mechan outcom payment function bayes-nash equilibrium truthtel alway optim agent agent not yet anyth other agent type other agent truth formal agent i type θi ∈ θi altern type report ˆθi ∈ θi case determinist mechan e θ1  θi−1 θi+1  θn [ ui θi θn θi θn ≥ e θ1  θi−1 θi+1  θn [ ui ˆθi θn ˆθi θn ] case random mechan e θ1  θi−1 θi+1  θn |θi eo|θ1  θi  θn [ ui θi θn ≥ e θ1  θi−1 θi+1  θn |θi eo|θ1  ˆθi  θn [ ui ˆθi θn ] term payment case payment not possibl autom mechan design now comput problem definit automated-mechanism-design amd autom mechan design set ir notion ex interim post none solut concept domin strategi bayes-nash payment possibl • random possibl • decis variant problem target valu g mechan kind term payment random ir notion solut concept expect valu g object interest special case onli agent case report agent alway everyth other agent types-becaus other agent ex post ex interim ir onli agent other agent type ir concept coincid here also implement domin strategi implement bayes-nash equilibrium onli agent other agent type solut concept here observ use tool hard result comput hard singleag set immedi hard ir concept solut concept number agent payment-maximizingdeterminist amd is hard section np-complet determinist mechan expect sum payment agent problem hard even single-ag set therebi immedi hard ir concept solut concept nphard minsat problem definit minsat formula φ conjunct normal form set boolean variabl v set claus c integ k k < |c| assign variabl v such k claus φ minsat recent np-complet [ ] now result payment-maxim determinist amd np-complet even singl agent even uniform distribut type proof easi problem np np-hard arbitrari minsat instanc follow single-ag payment-maxim determinist amd instanc agent s type θ = θc c ∈ c ∪ θv v ∈ v c set claus minsat instanc v set variabl probabl distribut type uniform outcom set o = o0 ∪ oc c ∈ c ∪ ol l ∈ l l set liter l = +v v ∈ v ∪ −v v ∈ v notat v l v denot v variabl correspond liter l l ∈ +v −v l ∈ c denot liter l claus c then agent s util function u θc ol |θ| l ∈ l l ∈ c u θc ol l ∈ l l /∈ c u θc oc |θ| + u θc oc c ∈ c c = c u θv ol |θ| l ∈ l v l v u θv ol l ∈ l v l v u θv oc c ∈ c goal amd instanc g = |θ| + |c|−k |θ| k goal minsat instanc instanc equival first solut minsat instanc assign truth valu variabl solut function f v → l v f v v ∈ v then v ∈ v = v π θv c ∈ c oc π θc |θ| c not minsat solut π θc |θ| c satisfi straightforward ir constraint satisfi now agent incent agent s type θv then other report outcom payment incent agent s type θc c satisfi claus again other report outcom payment incent final case agent s type θc c unsatisfi claus case none type outcom ol liter l ∈ c precis claus not minsat instanc also type θc lead outcom oc other type outcom util still payment |θ| agent clearli agent truth total util agent never incent final goal s number satisfi claus minsat solut s ≤ k expect payment mechan |v ||θ|+s|θ|+ |c|− |c|−k g so solut amd instanc now solut amd instanc outcom function o payment function π first v ∈ v such o θv o+v o−v then util agent outcom type henc ir payment agent type again ir maximum payment other type |θ| + maximum payment |θ|−1 g solut amd instanc solut amd instanc v ∈ v o θv o+v o−v assign truth valu variabl v true o θv = o+v o θv o−v assign solut minsat instanc ir constraint maximum payment type θv |θ| incent agent fals claus c assign maximum payment correspond type θc type agent s util case v variabl satisfi c assign o θv = ol l c then agent θv instead truth report θc outcom worth |θ| final unsatisfi claus c ir constraint maximum payment correspond type θc |θ| + expect payment mechan v |θ|+s|θ|+ |c|− θ s number satisfi claus mechan goal v |θ|+s|θ|+ |c|− g simpl algebra manipul equival ≤ k so solut minsat instanc payment-maxim amd just special case amd self-interest design design prefer outcom chosen immedi hard gener case amd selfinterest design payment possibl howev not yet hard special case payment not possibl hard case next section self-interest determinist amd without payment is hard section np-complet determinist mechan expect design s payment not possibl problem hard even single-ag set therebi immedi hard ir concept solut concept payment determinist amd self-interest design np-complet even singl agent even uniform distribut type proof easi problem np np-hard arbitrari minsat instanc follow single-ag self-interest determinist amd payment instanc agent s type θ = θc c ∈ c ∪ θv v ∈ v c set claus minsat instanc v set variabl probabl distribut type uniform outcom set o = o0 ∪ oc c ∈ c ∪ ol l ∈ l ∪ o∗ l set liter l = +v v ∈ v ∪ −v v ∈ v notat v l v denot v variabl correspond liter l l ∈ +v −v l ∈ c denot liter l claus c then agent s util function u θc ol l ∈ l l ∈ c u θc ol −1 l ∈ l l /∈ c u θc oc u θc oc −1 c ∈ c c = c u θc o∗ u θv ol l ∈ l v l v u θv ol −1 l ∈ l v l v u θv oc −1 c ∈ c u θv o∗ = −1 design s object function g |θ|+1 g |θ| l ∈ l g |θ| c ∈ c goal amd instanc g = |θ| + |c|−k |θ| k goal minsat instanc instanc equival first solut minsat instanc assign truth valu variabl solut function f v → l v f v v ∈ v then v ∈ v = v c ∈ c minsat solut oc unsatisfi c ∈ c straightforward ir constraint satisfi now agent incent agent s type θv maximum util type incent agent s type θc c satisfi claus again maximum util type incent final case agent s type θc c unsatisfi claus case none type outcom ol liter l ∈ c precis claus not minsat instanc also type outcom oc outcom mechan ever agent util type θc henc agent incent fals agent never incent final goal s number satisfi claus minsat solut s ≤ k then valu design s object function |v ||θ|+s|θ|+ |c|− |c|−k g so solut amd instanc now solut amd instanc outcom function o first v ∈ v such o θv o+v o−v onli other outcom mechan ir constraint o0 object valu valu object function ever |θ| + maximum valu object function |θ|−1 g solut amd instanc solut amd instanc v ∈ v o θv o+v o−v assign truth valu variabl v true o θv = o+v o θv o−v assign solut minsat instanc abov type θv valu object function mechan |θ| claus c assign valu object function case agent report type θc |θ| not outcom o∗ type case agent incent θv instead v variabl satisfi c assign o θv = ol l c final unsatisfi claus c maximum valu object function case agent report type θc |θ| + simpli valu function ever expect valu object function mechan v |θ|+s|θ|+ |c|− θ s number satisfi claus mechan goal v |θ|+s|θ|+ |c|− g simpl algebra manipul equival ≤ k so solut minsat instanc hard result constraint mechan determinist next section hard design disappear random mechan random amd for a selfinterest design is easi now random outcom problem self-interest amd tractabl linear program constant number agent self-interest random amd constant number agent solvabl polynomi time linear program payment ex post ex interim ir implement domin strategi implement bayes-nash equilibrium-even type proof linear program polynomi time ] number variabl equat program polynomi constant number agents-that exponenti onli n throughout purpos size linear program t = maxi |θi| variabl linear program probabl p θ2 θn o tn |o| variabl payment πi θ1 θ2 θn ntn variabl linear program case payment possibl case payment easili simpli payment variabl program addit constraint payment first ir constraint ex post ir follow ntn constraint lp • i n θ1 θ2 θn θ1 × θ2 × × θn p θ2 θn u θ2 θn ex interim ir follow nt constraint lp • i n θi ∈ θi θ1 θn |θi o∈o p θ2 θn u θ2 θn now solut concept constraint implement domin strategi follow ntn+1 constraint lp • i n θ1 θ2 θi θn θ1 × θ2 × × θn altern type report ˆθi ∈ θi constraint o∈o p θ2 θi θn u θ2 θi θn ≥ o∈o p θ2 ˆθi θn u θ2 ˆθi θn final implement bayes-nash equilibrium follow nt2 constraint lp • i n θi ∈ θi altern type report ˆθi ∈ θi constraint θ1 θn |θi o∈o p θ2 θn u θ2 θn θ1 θn |θi o∈o p θ2 θn u θ2 θn express design • θ1 θn o∈o p θ2 θn g n i=1 πi θ1 θ2 θn number variabl constraint exponenti onli n henc linear program polynomi size constant number agent problem solvabl polynomi time implic an optim combinatori auction design problem section interest consequ problem autom mechan design self-interest design optim combinatori auction combinatori auction set s item sale bundl b ⊆ s ui θi b i s util bundl b bidder s type θi optim auction design problem rule auction so expect revenu auction revel principl loss gener auction truth optim auction design problem case singl item famou myerson auction ] howev optim auction combinatori auction open research problem ] problem open even onli item sale twoitem case veri special form complementar substitut recent ] free disposal-item away cost also bidder prefer follow structur bidder bundl item bidder s util bundl item bundl onli item bidder s type definit bidder i best-onli prefer bundl item function vi θi × s → r such θi ∈ θi b ⊆ s ui θi b maxs∈b vi s follow use observ set sens bidder item reason bidder truth valu item away bidder not bidder free dispos so onli incent bidder fals type bidder actual type now problem determinist optim auction here np-complet reduct payment amd problem optim combinatori auction design problem best-onli prefer set item s bidder i finit type space θi function vi θi × s → r such θi ∈ θi b ⊆ s ui θi b maxs∈b vi optim determinist auction np-complet even singl bidder uniform distribut type proof problem np nondeterminist alloc rule then payment linear program np-hard arbitrari paymentmaxim determinist amd instanc singl agent uniform distribut type optim combinatori auction design problem instanc singl bidder best-onli prefer outcom o ∈ o amd instanc outcom o0 item so ∈ s let type space same v so = ui u as amd instanc expect revenu valu same instanc instanc equival first solut amd instanc outcom function payment function then amd solut o type optim auction solut so bidder type o = o0 case bidder payment function same instanc then util agent type true type solut same incent compat optim auction solut moreov type distribut payment function same expect revenu auctioneer/design same solut optim auction design instanc now solut optim auction design instanc at-most-one-item observ loss gener solut never item then optim auction solut so bidder type amd solut mechan choos outcom o type optim auction solut noth bidder type amd solut mechan choos outcom o0 type payment function same then util agent type true type solut same incent compat amd solut moreov type distribut payment function same expect revenu designer/auction same solut amd instanc fortun also easi result random mechan combinatori auction setting-giv few polynomial-tim algorithm optim combinatori auction design problem optim combinatori auction design problem best-onli prefer set item s bidder i finit type space θi function vi θi × s → r such θi ∈ θi b ⊆ s ui θi b maxs∈b vi number bidder constant k then optim random auction polynomi time ic ir constraint proof at-most-one-item observ loss gener ourselv alloc bidder item |s| + k such allocations-that polynomi number alloc outcom explicitli simpli payment-maxim amd instanc linear program relat research on complex in mechan design consider recent interest mechan design comput scienc issu comput complex work mechan easi eg ] rather complex mechan piec work complex autom mechan design benevol design ] roughgarden complex good network topolog agent link [ ] mechan design differ significantli design onli control rule game parti outcom payment also explicit report prefer conclus futur research often outcom basi prefer group agent key difficulti agent prefer insincer chosen outcom favor mechan design art rule game so agent prefer truth desir outcom recent approach-cal autom mechan design-a mechan specif prefer aggreg hand sever advantag downsid mechan design optim problem anew time work autom mechan design benevol design paper mechan design problem design self-interesteda much relev electron commerc set center onli outcom payment reason agent prefer relev center agent as well agent not mechan set optim determinist mechan np-complet import special case center interest onli payment payment not possibl center interest onli outcom chosen hard result hard gener mechan design set self-interest design hard result individu ration particip constraint ex interim ex post solut concept domin strategi implement bayes-nash equilibrium implement then random mechan design problem set comput easi final amd problem close interest variant optim combinatori auction design problem bidder best-onli prefer here too optim determinist mechan np-complet even agent optim random mechan easi futur research mechan design self-interest design restrict set such auction design s prefer bidder good-a well payment also complex autom mechan design set outcom type space special structur concis final data set real-world mechan design problems-both histor current-and appli mechan design problem 