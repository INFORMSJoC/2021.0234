distribut constraint optim dcop gener framework complex problem multi-ag system sever current algorithm gener dcop instanc adopt dpop arrang agent tradit pseudotre structur extens dpop algorithm extend set pseudotre arrang algorithm correctli dcop instanc pseudotre edg node separ branch algorithm also instanc tradit pseudotre arrang same procedur dpop algorithm dpop sever metric induc width pseudotre maximum dimension messag comput maximum sequenti path cost algorithm problem instanc not possibl tradit pseudotre edge-travers heurist cross-edg pseudotre multipl heurist pseudotre pseudotre linear space-tim complex problem signific improv messag comput size dpop categori subject descriptor i211 [ artifici intellig ] artifici intelligence-multiag system gener term introduct mani histor problem ai commun constraint satisfact problem csp advent distribut ai multi-ag system popular way complex interact coordin problem csp origin agent environ [ ] earli domain distribut constraint satisfact problem discsp job shop ] resourc alloc ] mani domain agent system especi teamwork coordin schedul sensor network overli problem difficult imposs constraint recent approach problem domain optim techniqu constraint multi-valu util function instead assign constraint approach assign high level global util extens origin discsp approach popular multi-ag system distribut constraint optim problem dcop ] current complet dcop use main approach search dynam program search algorithm discsp typic form [ ] propag adopt [ ] dynam algorithm dpop extens ] date categori algorithm arrang agent tradit pseudotre problem [ ] constraint graph tradit pseudotre howev also optim pseudotre np-hard perform tradit pseudotre current edge-travers heurist heurist often littl parallel pseudotre high depth low branch factor other way pseudotre increas parallel messag size other arrang cross-edg pseudotre depth factor tradit pseudotre hypothesi pseudotre tradit pseudotre problem type paper extens dpop algorithm extend set pseudotre arrang cross-edg pseudotre definit 978-81-904262-7-5 rp c ifaama dcop tradit pseudotre cross-edg pseudotre then summari origin dpop algorithm dcpop algorithm complex algorithm as well impact pseudotre gener heurist then distribut cross-edg pseudotre optim procedur dcpop significantli practic origin dpop algorithm problem instanc select idea futur work extens dcpop problem definit dcop slightli differ way recent literatur definit [ ] distribut constraint optim problem n node m constraint tupl < x d u > x = x1  xn set variabl uniqu agent • d = d1  dn set finit domain variabl • u = u1  um set util function such function subset variabl x util combin valu variabl optim solut dcop instanc assign valu d such sum util u maxim problem requir minimum cost instead maximum util cost neg util util function soft constraint also hard constraint arbitrarili larg neg valu paper onli binari util function variabl order util function minor chang algorithm also substanti complex tradit pseudotre pseudotre common structur search procedur parallel process independ branch [ ] pseudotre arrang graph g root tree t such vertic g share edg same branch t a back-edg edg node x node path x root x s parent figur pseudotre node edg a-b b-c bd back-edg a-c also [ ] type relationship node pseudotre • p x parent node x singl node pseudotre directli tree edg • c x children node x set node pseudotre directli tree edg pp x pseudo-par node x set node pseudotre directli back-edg figur a = pp c • pc x pseudo-children node x set node pseudotre directli back-edg figur c = pc a figur tradit pseudotre solid line edg parent-child relationship dash line pseudo-parent-pseudo-child relationship figur cross-edg pseudotre solid line edg parent-child relationship dash line pseudoparent-pseudo-child relationship dot line branch-parent-branch-child relationship bold node b merg point node e cross-edg pseudotre cross-edg edg node x node y x not path x root cross-edg pseudotre tradit pseudotre addit cross-edg figur cross-edg pseudotre cross-edg d-e cross-edg pseudotre certain edg primari set primari edg tree node parent child pseudo-par pseudo-child relationship tradit pseudotre now context primari edg tree definit also addit type relationship node • bp x branch-par node x set node pseudotre not primari path x root figur d = bp e bc x branch-children node x set node pseudotre not primari path x leaf node figur e = bc d pseudotre gener sixth intl joint conf autonom agent multi-ag system aama current algorithm usual pre-execut phase tradit pseudotre gener dcop instanc dcpop algorithm cross-edg pseudotre same fashion first dcop instanc < x d u > directli graph x set vertic edg pair variabl u next variou heurist graph pseudotre common heurist guid depth-first search df travers pseudotre df easili distribut fashion edge-travers method method pseudotre parent/child pair share edg origin graph df breadth-first search best-first search travers heurist cross-edg pseudotre distribut best-first search travers dpop algorithm origin dpop algorithm main phase first phase tradit pseudotre dcop instanc distribut algorithm second phase util hypercub children local node root third phase assign domain top fashion agent root node complex dpop size comput util messag phase size directli induc width pseudotre phase [ ] dpop polynomi time heurist pseudotre minimum width pseudotre np-hard sever edgetravers heurist low width pseudotre ] end first phase agent parent children pseudo-par pseudo-children util propag agent leaf node pseudotre process local util hypercub hypercub node x contain util combin valu domain p x pp x hypercub dimension size equal number pseudo-par messag hypercub p x agent non-leaf node messag children agent node y util messag local util hypercub domain p y pp y y local util hypercub then hypercub child messag point util node y domain y safe join hypercub elimin process util domain y combin domain messag hypercub now p y dimension size hypercub number domain receiv messag local util hypercub dynam program propag phase agent root node pseudotre messag children valu propag valu propag agent root node z messag children z parent pseudo-par simpli util children combin hypercub onli valu domain z point agent node z simpli assign domain util valu propag messag assign node c z other node then valu propag messag parent assign domain util assign messag node domain assign assign set assign children algorithm complet node assign domain dcpop algorithm extens origin dpop algorithm algorithm share same phase first phase cross-edg pseudotre dcop instanc second phase merg branch util hypercub third phase assign domain branch merg point top fashion agent root node first phase pseudotre sever heurist one overal complex complex comput util messag size dcpop not directli correspond induc width cross-edg pseudotre instead polynomi time method maximum comput util messag size cross-edg pseudotre descript method pseudotre select process section end first phase agent parent children pseudo-par pseudo-children branch-par branch-children branch util propag origin dpop node x onli util function parent pseudo-par dcpop node x util function branch-par concept branch figur node e node x distinct path node e b branch e singl node branch e meet node b merg point e agent node branch-par util propag messag branch-par messag dimension util hypercub domain node x branch-par bp x also branch inform structur origin node branch x total number branch x number branch x singl represent branch inform structur number intuit number merg branch total number branch algorithm merg point x figur node e util propag messag branch-par node d messag dimens domain e d branch inform origin e total branch branch origin dpop util propag phase agent leaf node x util propag messag parent dcpop messag dimens domain p x pp x node x also branch-par then util propag messag also dimens domain x branch inform structur figur node e util propag messag parent node c messag dimens domain e c branch inform origin e total branch branch node y util propag messag sixth intl joint conf autonom agent multi-ag system aama children branch-children branch same origin node x merg branch inform structur number merg branch x cumul total number merg branch total number branch then y merg point x util present y inform valuat util function node x addit typic elimin domain y util hypercub now safe domain x util hypercub process second phase node b figur second phase node b util propag messag first node c dimens domain e b also branch inform structur origin e total branch branch second node d dimens domain e b also branch inform structur origin e total branch branch node b then branch inform structur messag same origin node e number merg branch e now total branch e node b now dimens domain e node b also dimens own domain onli inform domain a node b then util propag messag a onli dimens domain a not possibl dpop method util propag dimens elimin hypercub node y not share domain dcpop not domain independ hypercub instead multipl hypercub util propag messag parent y lazi approach join messag size valu propag dpop valu propag agent root node z messag children point agent node z assign domain util z merg point branch node x z also assign domain x thu node merg point assign domain other own assign then primari edg hierarchi node x hierarchi branch-par then valu assign messag p x assign domain x everi node hierarchi assign one set assign children algorithm complet node assign domain proof correct correct dcpop first dcpop fulli dpop then case valu assign dcpop tradit pseudotre input dcpop algorithm execut ident dpop tradit pseudotre arrang node branch-par branch-children edg back-edg tree edg dcpop algorithm tradit pseudotre onli util propag messag domain parent pseudo-par node node branch-par branch thu node serv merg point other node thu valu propag assign node assign domain dcpop execut cross-edg pseudotre node merg point node x not merg point valu exactli dpop local util hypercub x domain x p x pp x bc x dpop valu assign messag x valu p x pp x also x not merg point assign bc x merg point tree valu assign messag p x thu domain assign onli domain x agent node x now correctli assign maximum util own domain node x merg point branch-child y x node path y root p y bp y root algorithm y necessarili inform c y pc y bc y messag node x inform node tree y p y bp y pp y x tree pp y x tree x assign domain pp y valu assign messag p x thu x util inform util function y part domain valu assign messag node x local util hypercub domain x y agent node x now correctli assign maximum util domain x y complex analysi first phase dcpop messag p x pp x bp x second phase valu assign messag c x thu dcpop linear number messag respect number edg util function cross-edg pseudotre origin dcop instanc actual complex dcpop addit measur messag size comput size messag size comput size dcpop number branch as well number back-edg [ ] number back-edg equal induc width pseudotre poorli cross-edg pseudotre number branch node x as larg total number descend x thu total messag size dcpop poorli instanc space-exponenti total number node graph howev practic well cross-edg pseudotre much result later issu well pseudotre set addit measur maximum sequenti path cost algorithm measur directli maximum amount parallel achiev algorithm measur first total comput size node phase comput size number individu access valu hypercub node exampl join domain size cost ∗ = acycl graph dag then util propag messag edg phase cost node other valu assign messag phase cost node maximum sequenti path cost equal sum path dag root leaf node heurist assess complex dcpop case possibl algorithm sixth intl joint conf autonom agent multi-ag system aama dcpop algorithm dcpop x d u agent xi phase pseudotre creation elect leader xj ∈ leader initi creation afterward xi p xi pp xi bp xi c xi bc xi pc xi util messag propag |bp xi then branchxi ← |bp xi xk ∈bp xi utilxi xk ←comput util xi xk send messag xk utilxi xk branchxi |c xi ie xi leaf node then utilxi p xi comput util p xi pp xi pp xi send messag p xi utilxi p xi branchxi send messag pp xi empti util empti branch pp xi activ util messag handler valu messag propag activ valu messag handler end algorithm util messag handler xk utilxk xi branchxk store utilxk xi branchxk xi util messag children branch children then bj ∈branch xi bj then join hypercub bj ∈util xi elimin bj hypercub p xi null xi root then v ∗ i choos optim null send valu xi v ∗ i c xi els utilxi p xi comput util p xi pp xi send messag p xi utilxi p xi branchxi p xi valu messag handler valuexi p xi xk ← v ∗ k ∈valuexi p xi view xi ← v ∗ i optim agent view send valuexl xi xl ∈c xi real world problem gener pseudotre signific impact actual perform problem pseudotre dcop instanc np-hard heurist gener perform algorithm pseudotre heurist previou research heurist good pseudotre ] heurist good cross-edg pseudotre use dcpop focu multipl heurist then pseudotre gener pseudotre onli heurist polynomi time respect number node origin dcop instanc actual dcpop algorithm case exponenti complex maximum messag size comput size sequenti path cost cross-edg pseudotre linear space-tim complex simpli algorithm local util hypercub optim valu assign instead messag dimension branch inform util hypercub heurist gener pseudotre measur procedur measur inform chosen root pseudotre root then total complex heurist node heurist chanc node heurist pseudotre node then proce dcpop algorithm knowledg pseudotre heurist heurist tradit pseudotre distribut df travers gener algorithm token pass mechan linear number messag df heurist special procedur root node also order function neighbor node order path recurs df heurist experi work [ ] best-first cross-edg pseudotre heurist cross-edg pseudotre best-first travers gener best-first algorithm node expans algorithm evalu function node valu next node note algorithm node onli exchang valu neighbor experi sever evalu function argument order list ancestor node list neighbor neighbor placement depth tree branchpar branch-children unknown relationship potenti node placement overal function valu ancestors− branchparents+branchchildren number unknown relationship tiebreak complet node knowledg parent ancestor easili node pseudo-par branchpar pseudo-children branch-children complex best-first travers complex evalu function complex o v evalu function case overal function best-first travers o v · e o n3 v v place oper next node getbestneighbor oper place oper o v sent messag next node recurs onli alreadi sixth intl joint conf autonom agent multi-ag system aama best-first search algorithm root ← electedlead next root ∅ place node parent nodepar ← parent nodeancestor parentancestor parent send placement messag node nodeancestor neighbor node next current previou current not then place current previou current ∅ els ← getbestneighbor current previou = ∅ then previou then node previou ∅ els next current getbestneighbor current previou ← ∅ n ∈ currentneighbor n = previou then then nscore ← getbestneighbor n current els nscore ← evalu current n nscore score then ← nscore ← n return score node o v recurs recurs recurs getbestneighbor oper node neighbor oper o v · e result onli o v space node thu o v · v +v +v ·e o v ·e smart local chang node placement messag neighbor result getbestneighbor oper onli o e complex place oper placement total complex onli o v · e thu overal complex o v ·e+v · v +e o v ·e comparison of complex in dpop and dcpop alreadi same input dcpop same dpop also accur perform pseudotre linear spacetim complex constant number heurist set pseudotre pseudotre linear space-tim complex now dcop instanc cross-edg pseudotre outperform possibl tradit pseudotre edge-travers heurist figur dcop instanc node bipartit graph partit fulli other b c figur dcop instanc b tradit pseudotre arrang dcop instanc c cross-edg pseudotre arrang dcop instanc partit figur b tradit pseudotre arrang dcop instanc easi edgetravers heurist not node same partit success also node child such arrang invalid pseudotre thu tradit pseudotre arrang dcop instanc form figur b back-edg f-b f-a node c node c also parent e back-edg d origin dpop algorithm dcpop ident case comput node c domain b c d e contrast cross-edg pseudotre arrang figur c onli maximum domain comput dcpop node a merg point branch b c node d e f branch addit node node a parent dcpop algorithm comput node d e f domain b c d e f tradit pseudotre arrang edge-travers heurist dcpop dpop even optim pseudotre edge-travers pseudotre arrang parent-child relationship actual constraint problem figur maximum comput size domain howev current heurist dpop not such pseudotre heurist difficult node inform node constraint also not here cross-edg pseudotre messag size such pseudotre even comput size similar practic pseudotre arrang np-hard heurist cross-edg pseudotre often significantli comput messag size experiment result sixth intl joint conf autonom agent multi-ag system aama perform metric dcop algorithm total number messag synchron clock cycl messag size alreadi total number messag linear respect number constraint dcop instanc also maximum sequenti path cost pc measur maximum amount parallel achiev algorithm maximum sequenti path cost equal sum comput path root leaf node also metric maximum comput size number dimens cd maximum messag size number dimens md rel complex dcop instanc minimum induc width iw tradit pseudotre heurist origin dpop gener dcop instanc initi test randomli set problem case problem random number rang constraint variabl gener then binari constraint variabl maximum number constraint first set variabl dpop iw averag second set variabl dpop iw averag problem second set too complex actual solut measur metric techniqu section actual problem result first set tabl second set tabl problem set case low densiti high densiti categori low densiti case problem dpop iw equal half total number node eg iw node problem iw ≤ node problem high densiti problem remaind problem set tabl tabl perform metric origin dpop algorithm dcpop algorithm onli cross-edg pseudotre dcpop-c dcpop algorithm tradit cross-edg pseudotre dcpop-al pseudotre dpop heurist df df mcn df cliqu mcn df mcn dstb df mcn bec version guid df travers section cross-edg pseudotre dcpop-c heurist mcn lcn mcn a-b lcn a-b lcsg a-b version best-first travers section dpop dcpop-c pseudotre respect heurist problem set dcpop-al pseudotre heurist problem set cd md valu averag number dimens pc metric valu natur logarithm maximum sequenti path cost actual valu exponenti complex problem final row tabl measur improv dcpop-al dpop cd md valu reduct number dimens pc metric valu percentag reduct maximum sequenti path cost % = dp op −dcp op dcp op ∗ notic dcpopal dpop metric logic assert same input dcpop exactli same dpop thu choic pseudotre heurist dcpop-al alway densiti high densiti algorithm cd md pc cd md pc dpop dcpop-c dcpop-al improv % % tabl node problem low densiti high densiti algorithm cd md pc cd md pc dpop dcpop-c dcpop-al improv % % tabl node problem comput dimens size figur messag dimens size sixth intl joint conf autonom agent multi-ag system aama figur path cost dcpop improv ag mtg var const iw cd md pc -001 % % % % % % tabl meet problem perform dpop trend improv high densiti problem low densiti problem trend detail figur notic improv complex problem problem addit initi gener dcop test seri test meet schedul problem msp [ ] problem setup number peopl depart person specifi number meet meet depart depart time slot msp map dcop instanc variabl time slot specif person specif meet variabl same person mutual exclus constraint so person not meet same time slot variabl same meet equal constraint particip same time slot unari constraint variabl person s valuat meet time slot test sampl problem combin agent meet result tabl valu first column repres order total number agent total number meet total number variabl averag total number constraint averag minimum iw tradit pseudotre last column same metric gener dcop instanc time onli improv dcpop-al dpop perform averag msp instanc again improv complex problem instanc conclus futur work complet algorithm gener dcop instanc cross-edg pseudotre arrang algorithm dpop algorithm addit util propag messag concept branch util propag phase algorithm also valu assign level merg point level node dcpop fulli dpop same oper same input also exampl experiment data dcpop perform problem instanc allow input cross-edg pseudotre particular emphasi role edge-travers heurist gener pseudotre perform penalti minim multipl heurist gener pseudotre linear space-tim complex import good pseudotre perform futur work new heurist pseudotre futur work also dpop extens ] support differ problem domain use dcpop 