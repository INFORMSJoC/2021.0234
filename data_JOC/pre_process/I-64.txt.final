organ import basi coordin multiag system howev way way not equal effect organiz structur strongli environment featur problem characterist avail resourc agent capabl environ dynam environment condit problem task structur time use static design-tim organiz structur such system other hand mani real environ problem not total uniqu certain characterist condit slowli import effect stabl organiz structur organizational-self design osd approach suitabl organiz structur runtim osd approach worthori domain other resourc addit onli resourc robust organ then approach contract-net approach show osd agent effici flexibl chang environ categori subject descriptor i211 [ distribut artifici intellig ] multiag system gener term algorithm design perform experiment introduct paper primarili interest organiz design multiag system role agent ∗primari author student coordin role number assign role resourc individu agent organiz design fact way way not equal effect [ ] instead optim organiz structur problem hand environment condit problem environment condit not priori time use static organiz structur other hand problem instanc environment condit not alway uniqu use new bespok organiz structur problem instanc organiz self-design osd ] approach organ run-tim agent respons own organiz structur osd especi abov scenario environ semi-dynam agent chang task structur environment condit still abl rel stabl organiz structur common characterist problem instanc approach [ ] oper osd agent spawn composit agent new agent part task load/respons agent idl extend period time agent tæm underli represent problem request tæm ] task analysi environ model simul comput framework complex task environ task problem extend hierarch task structur ] root node task structur high-level goal agent sub-nod node repres subtask method highlevel task leaf node level abstract repres execut method primit action agent execut method multipl outcom differ probabl differ characterist such qualiti cost durat tæm also variou mechan subtask variat altern ie node tæm characterist accumul function mani subgoal set subgoal order particular higherlevel goal tæm mani differ environ sensor network inform gather hospit schedul em militari plan ] main contribut paper osd approach tæm problem represent osd worth-ori domain turn reason altern task role assign differ quality/cost tradeoff differ organiz structur uncertainti execut task use resourc other onli processor resourc robust organiz structur relat concept osd not new work corkil lesser dvmt system ] even concept not fulli recent dignum et al ] osd context reorgan agent societi attempt variou kind reorgan possibl reason reorgan type reorgan respons reorgan decis scheme type reorgan agent categori structur chang reorgan decis share command research primarili work gasser ishida [ ] osd context product system order adapt work alloc load balanc approach organiz primit composit decomposit similar organiz primit agent spawn composit main differ work work tæm underli represent problem firstli represent gener class problem secondli quantit reason task structur latter also differ design-to-criteria schedul ] horl lesser [ ] differ top-down approach osd also tæm underli represent howev approach fix number agent role osd work interact agent result agent differ subtask differ resourc goal also work sycara al ] agent clone approach alloc load balanc approach author present agent clone possibl respons overload agent spare unus resourc system agent clone part task load henc agent clone akin approach howev approach differ special agent formerth agent perfect replica origin agent same role respons origin agent approach other hand spawn agent subpart spawn agent s task structur no longer respons spawn agent henc approach also explicit organ format coordin agent task not approach other approach osd work so durfe [ ] top-down model osd context cooper distribut problem solv cdp barber martin ] adapt decis framework agent abl decision-mak group dynam decis particular goal decisionsth latter work primarili coordin decis osd work primarili task resourc alloc task resourc model discuss osd now formal task resourc model model primari input multi-ag system ma order set problem request task instanc < p1 p2 p3 pn > problem request pi tupl < ti ai di > scheme ti tæm task structur ∈ n+ arriv time ∈ n+ deadlin ith task instance1 ma prior knowledg task ti arriv time ai order ma qualiti task ti deadlin di furthermor task structur ti tupl < t τ m q e r ρ c > • t set task task non-leaf node tæm task structur goal agent task characterist accumul function other subtask method order goal task formal task tj pair qj sj qj ∈ q sj ⊂ t ∪ m conveni function subtask task t → p t ∪ m supertask tæm node t ∪ m → p t subtask supertask tæm node respectively2 τ ∈ t root task structur ie level goal organ qualiti problem equal qualiti task τ • m set execut method m = m1 m2 mn method mk outcom distribut p1 p2 pm pair pl outcom pl probabl mk outcom ol furthermor outcom ol tripl ql cl dl ql qualiti distribut cl cost distribut dl durat distribut outcom ol discret distribut set pair p1 p2 pn pi ∈ + probabl outcom quality/cost/dur nl ∈ n type distribut pm pl • q set quality/characterist accumul function caf caf task group qualiti qualiti subtasks/method research caf min max sum exactli one [ ] formal definit • e set non-loc effect again [ ] formal definit • r set resourc • ρ map execut method resourc quantiti resourc agent method ρ method resourc m × r → n n set natur number zero n+ set posit natur number zero p power set set ie set subset set sixth intl joint conf autonom agent multi-ag system aama • c map resourc cost resourc c resourc r n+ also follow set assumpt research agent ma infinit a = a1 a2 a3 not fix set agent instead agent problem request same underli task structur ie = t t task structur problem ma assumpt mani practic problem mind tæm task structur basic high-level plan goal step goal-a well possibl conting situations-hav pre-comput offlin task structur mani conting altern uncertain characterist runtim flexibl choic same underli task structur veri differ specif instanc resourc exclus onli agent resourc time furthermor agent set resourc needseven resourc ownership evolut organ resourc non-consum self design agent role relationship organiz structur primarili role relationship role agent particular role role agent role part agent role solut problem long-term commit agent question certain cours action task respons author mechan coordin relationship role coordin exist subpart problem approach organiz design directli task structur environment condit problem role tæm subtre particular node henc set t ∪ m space possibl role note definit role other sub- particular tæm node subtre henc term role task node task interchang also differenti local non-loc role local role role sole respons singl agent agent respons subproblem tree node such role agent subtask sole discret consult other agent manag role other hand agent such role descend local role respons separ agent coordin mechan such gpgp ] coordin formal function type agent tæm node a× t ∪ m → local manag type respons agent specifi role then type r local ⇐⇒ ∀ri∈subtask r type ri local type r manag ⇐⇒ [ ∃a1∃r1 r1 ∈ subtask r type a1 r1 manag ∨ [ ∃a2∃a3∃r2∃r3 a2 = a3 ∧ r2 = r3 ∧ r2 ∈ subtask r ∈ subtask r type a2 r2 = local ∧ type a3 r3 = local organ format adapt organiz structur agent organiz primit agent spawn composit primit chang assign role agent agent spawn gener new agent subset role spawn agent agent composit other hand orthogon merg agent togeth combin agent respons role agent order format adapt organ agent repres reason role assign henc part organiz knowledg agent list local role non-loc role note agent onli organiz knowledg individu respons agent estim perform so far organiz primit first rule organiz invari alway organiz chang local role descend node role local type r local =⇒ ∀ri∈subtask r type ri local similarli non-loc role ascend node role type r manag =⇒ ∀ri∈supertask r ∃ai ai ∧ type ai ri manag local role differ agent share common ancestor ancestor manag role type a1 r1 = local ∧ type a2 r2 = local ∧ a1 = a2 ∧ r1 = r2 =⇒ ∀ri∈ supertask r1 ∩supertask r2 a ∧ type ai ri manag direct descend role local sole respons singl agent role local role ∃a∃r∀ri∈subtask r ∈ a ∧ r ∈ t ∪ m type ri = local =⇒ type r = local new agent agent spawn local role newli agent algorithm invari rule spawn agent type ascend role node newli agent local spawn agent onli local organiz knowledg not global organiz knowledg sixth intl joint conf autonom agent multi-ag system aama same time spawn agent task previous local role similarli newli agent onli just local role agent compos agent agent agent organiz knowledg compos agent organiz knowledg compos agent compos agent role local task compos agent care organiz invari rule spawnag spawningag → localrol r ⊆ t ∪ m type spawningag r local newag ← createnewag newagentrol findrolesforspawnedag localrol role newagentrol type newag role local type spawningag role ← preserveorganizationalinvari return newag algorithm findrolesforspawnedag spawningagentrol t ∪ m → t ∪ m r ← selectedrol nil roleset [ p r φ r ] cost r roleset cost r selectedrol then selectedrol roleset return selectedrol getresourcecost role t ∪ m m ← role ∩ m cost resourc r maxresourceusag method m ρ method resourc > maxresourceusag then max ← ρ method resourc cost ← cost + [ c resourc × maxresourceusag return cost role alloc key question agent need local-rol newli agent local role onu question findrolesforspawnedag function algorithm function set local role respons spawn agent subset role alloc newli agent subset result cost function evid line algorithm use differ cost function differ organiz structur priori reason cost function other perform differ cost function follow differ heurist getexpecteddur role t ∪ m m ← role ∩ m exptdur [ outcom = < q c d outcomeprob > ] m exptoutcomedur n p d exptoutcomedur n × p exptdur exptdur + [ exptoutcomedur × ] return exptdur alloc top-most role first heurist alway top-most node first node task structur root breadth-first fashion then heurist local-rol spawn agent number breakup node subtask newli agent heurist b role alloc constant time need search task structur c sens human-organiz perspect heurist correspond organ function line total resourc heurist attempt total cost resourc agent organ role r local role spawn agent r subset role alloc newli agent cost function heurist cost r r getresourcecost r − r +getresourcecost r balanc execut time heurist attempt role way agent equal amount work potenti role alloc heurist work absolut valu differ expect durat own role expect durat role newli agent differ close then agent roughli same amount work formal local role spawn agent r subset role alloc newli agent then cost function heurist cost r r |getexpecteddur r−r −getexpecteddur r heurist seri experi perform result organ randomli task structur result section reason organiz chang organiz chang expens clock cycl allocation/dealloc resourc stabl organiz structur task environment condit hand henc organiz structur onli task structur environment condit also temporari chang environment condit probabl organiz chang invers proport time last organiz chang time rel short agent still chang environ henc probabl agent organiz chang high similarli time last organiz chang rel larg low probabl organiz chang variat probabl organiz chang simul anneal probabl keepth sixth intl joint conf autonom agent multi-ag system aama organiz structur probabl formula p = δe kt δe amount overload/underload t time last organiz chang k constant mechan δe differ agent agent composit formula t larg p probabl organiz structur larg note valu p certain threshold order organ too sluggish reaction environment chang agent spawn necessari equat δe = α∗slack α constant slack differ total time avail complet outstand task sum expect time complet task task queue also amount slack neg immedi agent use anneal equat agent composit necessari again simul anneal equat howev case δe = β ∗ idl time β constant idl time amount time agent idl agent idl long period time δe larg p probabl organiz structur low organ and robust approach commonli robust multiag system survivalist approach ] domain agent order replica origin agent citizen approach ] use special monitor agent sentinel agent order agent failur dynam startup new agent lieu fail one advantag survivalist approach recoveri rel fast replica pre-exist organ as soon failur advantag citizen approach resourc littl modif organiz structur coordin protocol approach robust osd agent not clear approach thorough empir evalu approach paper citizen approach ] perform survivalist approach contract net protocol present evalu survivalist approach futur paper citizen approach special monitor agent period domain agent aliv messag agent agent not such messag monitor agent then new agent respons dead agent new agent deleg respons non-trivi monitor agent not access intern state domain agent compon organiz knowledg task inform former consist inform local manageri role agent latter method task other agent state inform onli monitor messag sent domain agent exampl order organiz knowledg monitor agent track spawn compos messag agent order spawn composit oper respect deduct process particularli case task inform monitor agent not access privat schedul domain agent detail scope paper evalu approach seri experi oper osd agent contract net agent variou task structur vari arriv rate deadlin start experi random tæm task structur depth branch factor cours experi seri task instanc problem organ agent deadlin directli osd approach contract net approach experi sever time osd agent first run differ number contract net agent subsequ run care same task structur task arriv time task deadlin random number trial experi group experi environ static task arriv rate deadlin experi environ dynam arriv rate deadlin graph figur averag perform osd organ contract net organ agent result averag experi experi static environ fix task arriv time cycl deadlin window cycl experi vari task arriv rate task arriv rate cycl cycl back cycl task experi task structur randomli maximum depth maximum branch factor runtim experi cycl sever hypothes compar perform osd approach wilcoxon matched-pair signed-rank test matched-pair signifi perform system precis same random task separ experi test hypothesi osd organ agent equal number task contract net organ hypothesi null hypothesi contract net agent task null hypothesi contract net organ agent static p dynam p larg contract net organ number task statist equival number osd agent howev number agent osd organ agent static case agent dynam case versu contract net agents3 origin hypothesi osd agent valu not indic scalabl approach approach organ agent significantli number agent kind applic mind ie web servic choreographi effici dynam use grid comput inform gather etc sixth intl joint conf autonom agent multi-ag system aama figur graph averag perform osd organ contract net organ agent error standard deviat equal number task upheld osd organ equal averag qualiti contract net organ null hypothesi contract net agent averag qualiti null hypothesi contract net organ agent static p dynam p contract net organ averag qualiti statist equival osd osd agent averag respons time contract net agent null hypothesi osd same respons time contract net organ static p dynam p osd agent messag contract net agent null hypothesi osd same messag contract net organ p < 0003 case contract net agent static environ p henc abov test agent contract net agent number task qualiti also respons time commun overhead result intuit sens goal osd approach osd organ averag respons time messag agent osd organ not wast time messag bid request bid qualiti task directli depend criteria/heurist bet tf mr rand number agent no-org-chang total-messages-s resource-cost tasks-complet average-qu average-response-tim average-runtim average-turnaround-tim tabl number time heurist statist equival perform criteria heurist key bet execut time tf topmost first mr minim resourc rand random alloc strategi tæm node uniform probabl alloc number task number task averag qualiti result first hypothesi slightli surpris due inher ineffici contract net protocol bid task instanc number agent equal number task next perform heurist task preliminari experi not here due space constraint lack clear winner heurist perform criteria case differ heurist better differ task structur environment condit experi differ random task structur t alloc strategi alway other perform criteria heurist perform set task structur environment condit perform criteria seri experi follow variabl depth task structur branch factor probabl task node min caf increment probabl node sum caf turn probabl up arriv rate cycl increment deadlin slack increment experi time new task structur time experi experiment set henc experi experiment set same valu exogen variabl experi note static environ experi perform arriv rate deadlin slack heurist also result experi osd organ singl agent ware result similarli preliminari analysi number max exactli one caf task structur minim effect perform alloc strategi probabl max exactli one caf order combinatori explos full factori experiment design sixth intl joint conf autonom agent multi-ag system aama experi task structur unsatisfi deadlin constraint final result experiment set experi thu whole set evalu final evalu experiment set potenti heurist follow perform criteria averag number agent total number organiz chang total messag agent total resourc cost organ number task averag qualiti averag qualiti total qualiti experiment run sum number task number task averag respons time organ respons time task differ time agent organ task start time time task gener time henc respons time equival wait time task never respons time final runtim gener time averag runtim task organ time differ time task start time task never time turnaround time sum respons time runtim task number task averag qualiti valu variou perform criteria perform wilcoxon matched-pair signed-rank test experi experiment set null hypothesi case differ pair heurist perform criteria consider interest case null hypothesi % confid p < number time heurist group statist rest count tabl number experiment set heurist statist equival tabl breakup number number time heurist other heurist number time heurist statist equival group heurist tabl tabl import inform perform heurist particularli interest follow result • wherea balanc execut time bet number agent number experiment set case experiment set statist equival first tf heurist didn t perform equal almost even number experiment set one other case bet alway agent agent equal task load often result organ even figur graph robust citizen approach baselin number task absenc failur number agent none small5 enough agent tf other hand larg agent success agent spawn agent small enough task deadlin often result organ odd number agent bet bet number organiz chang number experiment set fact over ten time as good second competitor tf agent conscienti initi task alloc need organiz chang especi static environ particularli interest easili explain result averag respons time minim resourc mr heurist averag respons time fact mr heurist extrem greedi prefer small agent tini resourc footprint so total increas resourc cost organ time wherea small agent other agent time presenc singl small agent suffici respons time fact mr heurist not effect heurist resource-cost organ fact onli random task/resourc alloc part due greedi natur heurist part fact spawn composit oper onli local inform non-loc inform resourc alloc decis someth futur final perform citizen osd mechan figur probabl failur increas number agent run also result slight decreas number task fact agent loos time newli agent fail discuss small agent agent low durat local role algorithm sixth intl joint conf autonom agent multi-ag system aama criteria/heurist bet tf mr rand bet+tf bet+rand mr+rand tf+mr bet+tf+mr all number agent no-org-chang total-messages-s resource-cost tasks-complet average-qu average-response-tim average-runtim average-turnaround-tim tabl tabl number time individu heurist number time certain group statist equival heurist onli interest heurist group number experiment set statist differ heurist random alloc strategi work thu preciou time not avail close deadlin part futur research firstli survivalist approach survivalist approach actual citizen approach probabl agent failur replic agent task parallel moment origin agent thu time tight deadlin also strongli optim organiz structur probabl failur desir level robust exampl way level robust survivalist approach larg number agent failur task deadlin howev relax system agent order resourc turn detriment effect robust therefor toward end robust properti task structur way organiz design such properti account conclus paper run-tim approach organ agent organiz self-design suitabl organiz structur also perform organ agent approach bespok organ format place contract net protocol approach contract net approach evid number task qualiti respons time final perform differ resourc alloc heurist variou perform metric also robust approach 