agent interact vital role ma messagecentr approach interact drawback present agent-ori program languag not support agent interact flexibl robust instead messag primit build block paper approach agent interact commit machin framework framework interact level social commit flexibl interact commitmentbas interact convent agent-ori program languag contribut paper map commit machin collect bdi-styl plan extens semant bdi languag examin issu commit machin manag race condit solut problem categori subject descriptor i211 [ artifici intellig ] artifici intelligencemultiag system i25 [ artifici intellig ] program languag softwar gener term design introduct agent social agent interact vital role multiag system consequ design implement agent interact import research topic standard approach agent interact messagecentr interact interact protocol permiss sequenc messag notat such finit state machin petri net agent uml message-centr approach interact design not good match intellig agent intellig agent abil goal face failur robust differ approach flexibl other hand interact protocol agent flexibl robust abil persist altern mean interact s aim option protocol s design practic message-centr design process not flexibl robust limit tradit approach agent interact number approach recent year away message-centr interact protocol instead agent interact higher-level concept such social commit [ ] interact goal ] also work form interact specif set such team cooper agent [ ] howev flexibl robust agent interact virtual work languag support such interact current agent orient program languag aopl not support flexibl robust agent interact higher-level concept messag inde modern aopl [ ] virtual except onli simpl messag basi agent interact paper knowledg second aopl high-level flexibl robust agent interact implement first such languag stapl few year ago ] not detail arguabl impract use non-specialist due logic basi heavi relianc tempor modal logic paper scheme bdi-lik aopl direct implement agent interact yolum singh s commit machin cm framework ] remaind paper review commit machin simpl abstract bdi aopl common subset languag such jason can then scheme commit machin languag languag then scheme rang issu distribut turn ] race condit commit machin aim commit machin framework definit interact flexibl tradit message-centr approach commit machin cm ] specifi interact entiti eg agent servic process term action interact state interact state consist fluent predic chang valu time also social commit base-level condit base-level social commit undertak debtor a creditor b condit p c a b p sometim c p not import ident entiti question exampl commit custom c m fluent true c c m condit social commit undertak debtor a creditor b becom true a then condit p cc a b q p ident entiti unimport obviou cc q p arrow remind causal link q true creation commit p true exampl commit fluent true onc good cc good semant commit base-level condit rule commit time exampl commit c p cc q p p true commit cc q p c p q becom true paper symmetr semant ] subsequ ] brief semant deal number complex case such commit condit alreadi p cc p q then c q instead cc p q interact entiti possibl content interact state fluent commit importantli action entiti along precondit effect action add delet list commit machin cm rang possibl interact start state1 action final state final state base-level commit way interact possibl commit machin finit state machin cm exampl figur fsm2 correspond netbil [ ] commit machin simpl cm custom c merchant m attempt follow actions3 standard interact protocol finit state machin design initi state interact finit state machin software-gener node connect implement axiom avail http //wwwwinikoffnet/cm then graphviz http //wwwgraphvizorg/ notat a x p ⇒ e action entiti x precondit p p empti effect e • c • sendquot m ⇒ offer offer promisegood ∧ promisereceipt promisegood cc m c accept good promisereceipt ≡ cc m c pay receipt • sendaccept c ⇒ accept accept ≡ cc c m good pay sendgood m promisereceipt ∧ good promisereceipt cc m c pay receipt • sendepo c good pay • sendreceipt m pay ⇒ receipt commit accept custom s promis onc good promisegood merchant s good onc custom accept promisereceipt merchant s receipt onc payment figur commit machin rang interact sequenc abstract agent programminglanguag agent languag bdi tradit eg dmar jam pr um-pr jack agentspeak l jason can jadex defin agent behaviour term event-trigg plan plan situat applic so-cal context condit plan bodi sequenc step event turn trigger plan collect plan event e agent first plan type event relev plan then context condit plan set applic plan instanc now formal syntax semant simpl abstract bdi agent program languag saapl languag abstract common subset such languag jason [ chapter ] [ chapter ] can [ ] thu intent incomplet area instanc t commit particular mechan plan failur differ mechan differ aopl agent program π collect plan claus form e c ← p e event c context condit logic formula agent belief p plan bodi plan bodi follow construct empti step alway noth oper +b delet −b belief messag m n ↑n m event4 e p p := b | c ∧ c | c ∨ c | ¬c | ∃xc p := | +b | −b | e | ↑n m | p p formal semant languag figur semant semant agentspeak ] turn semant can [ ] semant style plotkin structur oper semant oper check condit ↓n m short hand event messag m agent n sixth intl joint conf autonom agent multi-ag system aama figur finit state machin netbil = final state belief set belief belief belief belief case belief set ground oper respect consequ check b |= c addit b ∪ delet b \ sophist belief manag method not here basic configur s = q n b p q global messag queue sequence5 messag end other end n name agent b belief agent p plan bodi ie intent also agent configur instead singl plan bodi p set plan instanc γ final complet ma pair q global messag queue q set agent configur queue q global messag queue sequenc triplet form sender recipi messag transit s0 −→ s1 s0 singl step yield s1 arrow indic configur question basic agent configur ma configur transit relat rule form s −→ s form s −→ sr s −→ sr latter condit top numer premis bottom denomin conclus note non-determin saapl eg choic plan set applic plan select function so applic plan instanc event si plan next sa select agent step next implement commitment-bas interact section map commit machin collect saapl program role simpl case agent + oper sequenc concaten agent turn section assumpt action a x p ⇒ e number plan plan agent x context condit p action ie effect e agent belief messag other agent plan other agent state messag x exampl action sendaccept c follow plan plan m agent plan identifi sender respect recipi obviou ie other agent ↑n m ↑m resp m turn event ı short interact agent activ ı event event messag other agent then noth respons c ı true ← +accept ↑sendaccept m ↓sendaccept true ← +accept ı action non-trivi precondit then plan recipi action possibl error action s precondit doesn t hold section exampl action sendreceipt m pay receipt follow plan m ı pay ← +receipt ↑sendreceipt c ↓sendreceipt pay ← +receipt ı c ↓sendreceipt ¬pay ← report error addit plan also plan interact interact base-level commit agent follow plan ı ¬∃pc p ↑done ↓done ¬∃pc p ← ↓done ∃pc p ← report error interact agent s initi belief then exactli agent platform eg agent platform question simpl way belief file gener approach littl cumbersom portabl agent interact sequenc init messag sixth intl joint conf autonom agent multi-ag system aama q n b +b basic −→ q n b ∪ b q n b −b basic −→ q n b \ b δ = piθ| ti ci ← pi π ∧ tiθ = e ∧ b |= ciθ q n b e basic −→ q n b so δ q n b p1 basic −→ q n b p q n b p1 p2 basic −→ q n b p p2 q n b p basic −→ q n b p q n b ↑nb basic −→ q + n nb m n b q = na n m + q q n b γ agent −→ q n b γ ∪ ↓na m p = si γ q n b p basic −→ q n b p q n b γ agent −→ q n b γ \ p p p = si γ p = q n b γ agent −→ q n b γ \ p n b γ = sa q n b γ agent −→ q n b γ q ma −→ q ∪ n b γ n b γ figur oper semant saapl belief then agent start messag interact agent thu plan ↓init b true ← +b ↓start true ← ı figur saapl program merchant custom netbil protocol concis error report plan now context condit refin firstli action effect interact state secondli agent certain action abl not addit condit exampl custom not merchant s offer good certain price properti thirdli context condit plan interact need order interact prematur plan form ı p ← +e context condit p enhanc condit p ∧ p ∧ ¬e p addit condit agent ¬e negat effect action exampl custom s payment plan addit condit ie p ı good ¬pay ← +pay ↑sendepo plan form ↓m p ← +e ¬e precondit redund alreadi perform action action effect then custom s plan ı true ← +request ı true ← +accept ↑sendaccept ı good +pay ↑sendepo ↓sendquot true ← +promisegood +promisereceipt ı ↓sendgood true ← +promisereceipt +good ı ↓sendreceipt pay ← +receipt ı merchant s plan ı true ← +promisegood +promisereceipt ↑sendquot ı true ← +promisereceipt +good ↑sendgood ı pay ← +receipt ↑sendreceipt true ← +request ı ↓sendaccept true ← +accept ı ↓sendepo good +pay ı plan ie plan agent ı ¬∃pc p ↑done ↓done ¬∃pc p ← ↓init b true ← +b ↓start true ← ı accept ≡ cc good pay promisegood cc good ≡ cc receipt offer ≡ promisegood promisereceipt figur saapl implement netbil sender t messag also discuss section addit condit p care situat progress not onli action s possibl addit condit way prefer action mani agent platform agent s plan clearli safe action not just differ order third refin context condit plan interact commit machin framework state base-level commit final interact howev onli final state desir final state which final state desir depend domain desir interact outcom netbil exampl desir final state good receipt ie good ∧ pay ∧ receipt order agent interact too earli precondit termin plan ı good pay ∧ receipt ∧ ¬∃pc p ↑done figur plan figur order realis cm saapl number way chang bdi commit machin support chang chang chang agent program languag chang belief agent so commit sixth intl joint conf autonom agent multi-ag system aama custom s plan ı ← ı ¬accept ← +accept ↑sendaccept ı good ¬pay ← +pay ↑sendepo merchant s plan ı ¬offer +promisegood +promisereceipt ↑sendquot ı ¬ promisereceipt ∧ good +promisereceipt +good ↑sendgood ı pay ¬receipt ← +receipt ↑sendreceipt accept ≡ cc good pay promisegood cc good ≡ cc receipt offer ≡ promisegood promisereceipt figur saapl implement netbil refin context condit onli definit |= impli commit belief commit rule commit dynam notion belief commit fact chang agent platform prolog-lik support term belief eg jason can howev other agent platform extens exampl jack extens java chang commit case chang context condit commit context condit agent s belief b |= c account notion impli commit ] brief commit belief b commit belief c ∈ b also other condit exampl commit c pay belief pay commit pay true similar rule condit commit rule [ ] subsequ simpler form ] infer rule bottom part figur chang commit machin implement definit |= rule agent follow prolog claus x claus x true c p p c p claus cc q p true q cc q q cc q c q first claus simpli anyth agent s belief claus x true true x fact claus respect infer rule c1 c2 cc1 cc2 rule then context condit program so instead write exampl cc m c pay receipt cc m c pay receipt b = norm b ∪ q n b +b −→ q n b function norm b b ← b b ∈ b b = c p ∧ b |= p then b ← b \ b elseif b = cc p q then b |= q then b ← b \ b elseif b |= p then b ← b \ c q elseif b |= c q then b ← b \ b endif endif endfor return b end function b |= p b |= c p c1 cc q p ∈ b b |= q b |= p c2 b |= cc p q b |= q cc1 b |= c q b |= cc p q cc2 figur new oper semant final chang commit belief formal semant rule belief addit algorithm commit modifi rule algorithm definit norm ] top part figur final chang manual updat belief follow rule updat updat c p and p deletec p updat updat cc p q and q deletecc p q updat updat cc p q and p deletecc p q addc q updat updat cc p q and c q deletecc p q updat updat true | skip deletec deletecc respect base-level condit commit addc base-level commit aspect doesn t chang commit action commit don t trigger action directli action indirectli gener effect complet interact outstand base level commit figur messag sequenc number run implement netbil commit machine6 order differ possibl interact code so agent randomli action number run custom initi then merchant initi other possibl sequenc messag not sourc code avail http sixth intl joint conf autonom agent multi-ag system aama figur sampl run implement turn obviou one request quot good payment receipt then minor differ implement saapl semant messag semant saapl aopl messag event howev messag addit agent s belief fact messag [ ] thu implement rule belief rather event issu approach belief there belief question either onc precondit plan onc implement belief duplic handl messag two particip interact particip turn manag no possibl turn ] fact perhap surprisingli even particip set turn setup unreason assumpt exampl path figur state sendgood then state sendaccept result turn setup dead-end onli singl possibl action state name sendepo action custom merchant s turn figur fsm netbil initi solut problem exampl doesn t generalise7 turn regim agent twice row second action commit gener solut turn agent action abl current state onli singl activ agent then clearli agent s turn howev agent activ then agent next negoti not particularli good solut reason firstli negoti step interact agent activ netbil sixteen state highli desir light-weight mechan secondli not clear negoti infinit regress situat first first  arbitrari rule also possibl arbitrari rule exampl custom alway prefer merchant agent numer prioriti perhap order interact determin altern solut symmetr properti commit machin not turn consid action a1 c ⇒ p a2 c ⇒ q a3 m p ∧ q ⇒ figur netbil initi instead turn simpli agent freeli reli properti interact space thing out notion precis remaind section issu multipl agent activ simultan instead agent current interact state agent differ state agent own copi fsm possibl agent differ path fsm specif issu agent differ final state agent posit error not action messag action certain assumpt agent not differ final state furthermor error not again certain assumpt action state sequenc action a1 same regardless order action even agent differ path fsm still same state onc messag agent same set action issu differ final state possibl error shortli definit monoton action monoton not fluent commit commit machin directli delet fine commit fluents/commit sixth intl joint conf autonom agent multi-ag system aama monoton action monoton [ definit ] a1 a2 monoton action then a1 a2 same effect agent s a2 a1 [ theorem ] action howev possibl perform a1 a2 exampl a1 effect +p a2 precondit ¬p then action initi state not order action precondit not negat implic monoton action not precondit negation-fre fals note restrict onli origin action precondit p not addit precondit agent p onli p agent abl action thu monoton cm precondit not negat action commut howev fact restrict cm unnecessarili strong whenev choic agent then possibl action monoton onli singl agent then restrict action not monoton definit local monoton commit machin local monoton state s onli singl agent action b action s monoton local monoton cm onc messag agent same state furthermor error proof onc messag agent same action perhap differ order essenc proof as long agent haven t yet same state action monoton henc action not other action first point diverg agent action same time agent xb action b clearli state action agent so cm local monoton relev action monoton therefor a action b still so messag b recipi agent s belief effect b furthermor monoton action commut result b same b a s −−−−−→ sa yb b y sb a sab howev next action not b c b c not agent xb c also monoton henc result a b c same regardless order action b c doesn t disabl b b still c s a −−−−−→ sa c −−−−−→ sac yb b y b y sb a sab −−−−−→ c sabc reason c not xb messag order arrival9 perspect xb action b c therefor other agent s messag b messag c argument onc agent differ path fsm action point singl state monoton henc alway possibl action aren t interact error free state onc converg occur same monoton action commut theorem strong theoret guarante not turn manag not analog traffic light not accid onli possibl refin cm axiom symmetr theorem gener transform cm agent freeli simpli ı p ∧ p ∧ ¬e ← +e p ∧ p ∧ ¬e ← +e ↑a ı exampl instead ı ← ← ı consequ theorem not necessari agent process messag howev order unnecessari parallel still desir messag action figur number run implement free non-altern interact discuss scheme commit machin platform saapl exemplar chang cm-base interact turn manag cmbase interact cm local monoton chang saapl translat scheme commit machin bdi plan applic bdi languag section work flexibl robust agent interact virtual work flexibl robust interact alreadi stapl [ ] piec work relev work cheong winikoff herm methodolog ] main focu work pragmat design methodolog also guidelin herm design bdi platform specif jadex ] howev herm not design formal onli possibl skeleton code then also not turn issu agent agent abl also commun medium not messag order case eg tcp sixth intl joint conf autonom agent multi-ag system aama figur sampl run implement non-altern turn work kremer flore eg ] also commit deal implement howev infrastructur support casa rather program languag not assist programm agent netbil interact chang semant netbil program rather implement clearli desir semant languag directli implement also not so clear translat cm implement easili area further work assumpt action final need empir evalu alreadi work herm convent message-centr approach interact herm result design significantli flexibl robust [ ] commit machin herm commit machin framework not design methodolog herm methodolog interact result commit machin ] 