distribut alloc multiag coordin problem combinatori auction howev winner determin algorithm combinatori auction paus auction few effort auction work even possibl rid auction price combinatori auction natur problem winner determin bidder such way incent calcul comput load bidder bidder not true valuat necessari paus rule bidder howev not bidder bid coupl bid algorithm bidder paus auction algorithm alway set bid bidder s util problem np-hard time exponenti number item remark exhaust search paper bid algorithm virtu drawback solut revenue-maxim solut central winner determin algorithm categori subject descriptor i211 [ comput methodolog ] artifici intelligence-intellig agent multiag system gener term algorithm perform introduct both research practic combinatori auction rapidli past ten year combinatori auction bidder bid combin item packag bidset rather just individu item bidder bid necessari alloc item bidder auction s revenu problem winner determin problem combinatori optim problem np-hard [ ] nevertheless sever algorithm satisfactori perform problem size structur practic practic applic combinatori auction alloc airport takeoff land time slot procur freight transport servic procur public transport servic industri procur ] wide applic not general-purpos winner determin effici instanc problem thu sever approach algorithm winner determin problem howev winner determin algorithm combinatori auction agent bid auction then winner exampl algorithm cass [ ] bidtre ] cabob [ ] solut winner determin problem fit applic exampl agent not valuat auction paus progress adapt user select environ auction ] few effort problem winner determin bidder paus rule particip so work howev not bidder paper present algorithm pausebid cachedpausebid enabl agent paus auction bidset util algorithm implement myopic util strategi bidset agent s util outstand bid time pausebid branch bound search complet time cachedpausebid caching-bas algorithm node solut 978-81-904262-7-5 rp c ifaama paus auction a paus auction m item stage stage consist simultan price open-cri auction stage bidder onli bid individu item end state bid individu item bid success stage = m consist ascend price auction bidder bidset item bid k item bidder bid other agent previou round bidset thu better solut also new bidset sum bid price current bidset end stage agent bid subset size k less also point time stage bidset valu monoton new bidset final round agent possibl bidset final win bidset such agent bidset note howev bidset not one revenu ascend price auction bid set onli slightli second bid particular set item final price not same price tradit combinatori auction bidder true valuat howev open question final distribut item bidder paus auction same revenu solut test result answer question paus auction job auction veri easi sure new bidset revenu current win bidset as well make sure bid agent s bidset not inde other agent previou bid comput problem shift winner determin bid gener agent space bidset bid search fact agent onli current bid onli bidset own util current win bidset agent also clear incent comput name util onli bidset cours bidset other final paus auction envy-fre conclus auction bidder alloc other bidder ] even complet auction instead agent task auction bid agent bid agent set best bid determin new bid inde current bid agent incent comput expect util also lie other agent bid easili track bid agent set bid name onli one agent valu agent anyon valu other agent onli thing algorithm utility-maxim bidset agent problem formul a bid b element set item bid bagent agent bid bvalu valu price bid agent set b current bid set item size ≤ k k current stage point auction first round also set w ⊆ b current bid set bid item current revenu revenu w r w b∈w bvalu agent i s valu function vi s s set item agent s valu function current win bidset agent s util w ui w b∈w | bagent=i vi bitem bvalu agent s util bidset w valu item w price item agent not item then util goal bid agent paus auction util subject constraint next set bid total revenu current revenu increment auction formal w current win bidset agent i g∗ i such r g∗ i ≥ r w + g∗ i arg max g⊆2b ui g g set bid item ∀b∈g b ∈ b bagent = i bvalu > b bitem size bitem k b item valu bid b set item bid item zero bid b g condit b alreadi b b bid size ≤ k agent i bid price same item b bid algorithm paus auction first stage onli sever english auction bidder bid individu item case agent s domin strategi current bid valuat particular item algorithm focu subsequ stage k k > agent g∗ i complet search b howev approach comput expens larg search tree algorithm repres altern approach expens search pausebid algorithm pausebid algorithm figur heurist search tree bidder util point like onli few bid b sixth intl joint conf autonom agent multi-ag system aama pausebid i k my-bid ← their-bid ← b ∈ b bagent = i vi bitem then my-bid my-bid +new bid i vi bitem els their-bid ← their-bid s ∈ subset k item such vi s = s my-bid my-bid +new bid s i vi s bid my-bid + their-bid g∗ ← ∅ £ global variabl u∗ ← ui w global variabl pbsearch bid ∅ surplu ← b∈g∗ | bagent=i bvalu − b bitem then g∗ my-pay ← vi g∗ u∗ b ∈ g∗ | bagent = i my-pay ≤ then bvalu ← b bitem els bvalu ← b bitem my-pay ·bvalu −b bitem return g∗ figur pausebid algorithm branch bound search i agent k current stage auction k ≥ agent my-bid list bid agent s valuat current bid b valu bid agent s true valuat t necessarili true valuat later similarli their-bid rest bid b final agent search list simpli concaten my-bid their-bid note agent own bid first search list prune pausebid line agent now branch bound search branch-on-bid tree bid branch bound search pbsearch figur algorithm not onli standard bound also other techniqu order size search tree bound maximum util agent set bid u∗ initi u∗ w pausebid line util agent current solut util pbsearch ever partial solut maximum util agent u∗ then subtre pbsearch line note maximum util onli algorithm agent own bid first list solut not bid agent winner thu agent s util no exampl pbsearch bid g bid ∅ then b ← first bid bid ← bid g ← g + ¯ig ← item not g g not bid i then item then min-pay ← max r w − r g − ri g b∈g | bagent=i b bitem max-util ← vi g min-pay r g > r w max-util ≥ u∗ then g∗ ← g u∗ ← max-util pbsearch bid g − b £ b els max-revenu ← r g + max h ¯ig ¯ig max-revenu ≤ r w then pbsearch bid g − b £ b elseif bagent = i then min-pay ← r w + − r g − ri g h ¯ig max-util ← vi g min-pay max-util > u∗ then pbsearch ∈ bid ∩ bitem ∅ g £ b pbsearch bid g − b £ b els pbsearch ∈ bid ∩ bitem ∅ g £ b pbsearch bid g − b £ b return figur pbsearch recurs procedur bid set avail bid g current partial solut agent onli bid my-bid then maximum util equal valu item bid minimum possibl payment item still set bid revenu r w calcul minimum payment line partial solut case line case complet solut pbsearch note order min-pay partial solut case upper bound payment item upper bound h s s∈ max b∈b | bvalu size bitem function bound ident one bidtre algorithm-it mere individu item s valu equal maximum bid b number item bid branch not solut revenu current w algorithm valu bid b valuat sixth intl joint conf autonom agent multi-ag system aama agent similarli hi s k s∈ max s | size s ≤k s∈ vi s vi s size s individu item s s maximum valu valuat s size s s set agent valuat s size equal algorithm heurist h hi line pbsearch just branch same way a∗ algorithm heurist final prune techniqu algorithm branch agent bid current answer g agent s bid list pbsearch line g∗ pbsearch thu set bid revenu r w agent i s util howev agent i s bid g∗ still own valuat not possibl price pausebid respons agent s payment maximum util u∗ agent onli bid g∗ then simpli matter payment bid u∗ current maximum agent s true valuat howev agent bid then problem agent s payment bid mani way payment there not domin strategi distribut payment proport agent s true valuat set item pausebid set bid b current win bidset w constant execut agent s utility-maxim bidset branch bound search howev whole search stage problem result previou search cachedpausebid algorithm cachedpausebid algorithm figur second approach bid problem paus auction cach tabl c-tabl solut complet search time problem same agent i g∗ i g∗ i bidset bid agent i s set item agent i valuat such vi s ≥ b s i bidset s such r gs i ≥ r w + gs i arg max g⊆2b ui g g set bid item ∀b∈g b ∈ b bagent = i bvalu > b bitem = s bagent = i gs i i s bidset item bid i s item paus auction not set item size k so set item s vi s size s gs i then g∗ i gs i agent s util g∗ i arg max s | vi s s ≤k ui gs i agent i hash tabl c-tabl such c-tabl [ s ] = gs s vi s ≥ b s i k k-chang s c-tabl vi s < b s then s c-tabl els k-chang size s then b ← b + new bid i s vi s g∗ ← ∅ u∗ ← ui w s size s k c-tabl item − s gs ← c-tabl [ s ] £ global variabl min-pay ← max r w + b∈g b bitem us ← r gs min-pay £ global variabl k-chang size s = k ∃b∈b bitem ¯s bagent = i then b ← b ∈ b ⊆ ¯s bid ← b + b ∈ b|bitem ⊆ ¯s b /∈ b b ∈ bid vi bitem then bagent ← i bvalu ← vi bitem k-chang size s then n ← size bid us els n ← size b g ← ∅ + new bid s i vi s cpbsearch bid g n c-tabl [ s ] ← us > u∗ r gs ≥ r w then surplu ← b∈g | bagent=i bvalu − b bitem then my-pay ← vi gs − ui gs b ∈ gs | bagent = i my-pay ≤ then bvalu ← b bitem els bvalu ← b bitem my-pay ·bvalu −b bitem u∗ ← ui gs g∗ ← gs els us vi s < b s then s c-tabl return g∗ figur cachedpausebid cach search bidset util agent i k current stage auction k ≥ k-chang boolean true right auction next stage sixth intl joint conf autonom agent multi-ag system aama cpbsearch bid g n bid n then b ← first bid bid ← bid g ← g + ¯ig ← item not g item then min-pay ← max r w − r g − ri g b∈g | bagent=i b bitem max-util ← vi g min-pay r g > r w max-util us then gs ← g us ← max-util cpbsearch bid g − b n − £ b els max-revenu ← r g + max h ¯ig ¯ig max-revenu ≤ r w then cpbsearch bid g − b n − £ b elseif bagent = i then min-pay ← r w + − r g − ri g h ¯ig max-util ← vi g min-pay max-util us then cpbsearch ∈ bid ∩ bitem ∅ g n + £ b cpbsearch bid g − b n − £ b els cpbsearch ∈ bid ∩ bitem ∅ g n + £ b cpbsearch bid g − b n − £ b return figur cpbsearch recurs procedur bid set avail bid g current partial solut n valu deep list algorithm then g∗ gs c-tabl [ s ] agent s util onli set item s size s problem c-tabl updat gs time cachedpausebid deal other detail b set bid new bid b bid recent b bid price alway bidder alreadi b ¯s = item − s complement s set item not s cachedpausebid paramet agent current stage auction boolean true right auction next stage initi c-tabl row entri set s vi s entri set s vi s < b s c-tabl line then case k-chang true set s size s = k bid set valu equal s agent i line bid agent now then g∗ gs c-tabl onli set size s k line gs c-tabl [ s ] still solut s onli case not sure search c-tabl [ s ] case i k-chang true size s ≤ k gs c-tabl s ii bid b set item ¯s subset agent differ i probabl new bid solut c-tabl [ s ] case line cachedpausebid case gs bid s bidset miss item ¯s thu search space bid b set item ¯s subset list bid onli bid howev bid b begin bid line one then bid bid price valuat agent i same item bid agent i item valu equal agent s valuat line 16-19 recurs procedur cpbsearch line cachedpausebid figur one new gs cpbsearch slightli version branch bound search pbsearch first modif third paramet deep list bid n equal not onli list bid empti line time recurs call cpbsearch n bid bid line n same otherwis line valu n cpbsearch size list bid cachedpausebid line case i cpbsearch bid number bid b bid cachedpausebid line case ii onli first n bid bid current gs differ pbsearch bound cpbsearch us cachedpausebid line case i r gs −min-pay cachedpausebid line case ii cpbsearch g alreadi bid s cpbsearch sure right gs correspond c-tabl [ s ] cachedpausebid line line cachedpausebid sure right gs howev agent i s bid gs still own valuat not possibl price us current u∗ line cachedpausebid respons agent s payment maximum util us pausebid payment proport agent s true valuat set item case equal valuat agent i set item s current valu bid b same set item correspond c-tabl [ s ] not worthwhil cach tabl cachedpausebid line cachedpausebid function k agent s utility-maxim bidset w b constant execut sixth intl joint conf autonom agent multi-ag system aama generatevalu i item x ∈ item vi x 01 n ← num-bid − item s1 s2 ←two random set item valu vi s1 ∪ s2 = vi s1 + vi s2 + expd 01 figur algorithm gener random valu function expd x random number exponenti distribut mean number item cachedpausebid pausebid + + + + + + + + + + figur averag percentag converg y-axi percentag time algorithm converg revenue-maxim solut function number item auction test comparison algorithm seri experi order solut revenue-maxim solut time other order test valu function agents1 algorithm figur type valuat correspond set agent set task cost save particular agent togeth certain subset task exampl set robot item differ locat robot differ locat differ abil differ prefer cost item bundl subaddit prefer superaddit first experi simpli proper note not cat [ ] set bid indetermin number agent set bid combinatori auction not bid even mani peopl bid then valu function particip auction number item cachedpausebid pausebid + + + + + + + + + + figur averag percentag revenu algorithm rel maximum revenu y-axi function number item auction function algorithm then solut revenue-maxim solut cass set bid agent true valuat agent i set item s vi s bid set bid cass central winner determin algorithm solut revenu note howev revenu paus auction auction alway revenu revenue-maxim solut agent true valuat paus english auction final price roughli second-highest valuat set item number agent differ number item name algorithm time combin solut algorithm revenue-maxim solut not alway same distribut item revenue-maxim solut figur case algorithm distribut revenue-maxim solut larg gap first second valuat set set item revenue-maxim solut bid bid valuat then imposs paus auction solut bid bid never exampl agent i = second valuat onli then onli bid order item revenue-maxim solut then solut never bid never also averag percentag time algorithm converg revenue-maxim solut number item increas item almost % littl bit percent item increas so averag percentag converg around % item few instanc algorithm differ solut due differ sixth intl joint conf autonom agent multi-ag system aama number item cachedpausebid pausebid + + + + + + + + + + figur averag number expand node y-axi function item auction order bid bid list differ order revenu paus auction gener revenu solut much question percentag proport revenu algorithm rel revenu cass percentag revenu algorithm increas averag % number item increas figur howev cachedpausebid revenu pausebid % averag auction item same percentag again differ order search case item produc averag revenu proport % other extrem item cachedpausebid averag revenu proport % pausebid averag revenu proport % scalabl algorithm number node search tree number time time pausebid number time time cachedpausebid respect algorithm np-hard problem number expand node exponenti number item figur howev cachedpausebid outperform pausebid averag number node exampl averag number node item cachedpausebid pausebid other extrem item expand averag onli node pausebid expand averag node differ node number node algorithm increas function number item actual number node much worst-cas scenario nn n number item exampl item slightli node case pausebid case cachedpause01 number item cachedpausebid pausebid + + + + + + + + + + figur averag time second auction y-axi function number item auction bid much number notic also valu gener algorithm figur number bid exponenti number item mani situat such result not conclus time exponenti number item number bid independ number item algorithm exponenti function number bid roughli constant number item grow sure node inde execut especi algorithm execut differ oper thu same experi agent same machin intel centrino ghz laptop pc gb ram rmp gb hard drive averag time auction algorithm figur cachedpausebid pausebid differ execut speed even clear number item increas relat lot research variou aspect combinatori auction [ ] good review howev studi distribut winner determin algorithm combinatori auction still rel new approach algorithm winner determin problem combinatori auction [ ] algorithm comput entiti item thu differ type distribut vsa algorithm ] way distribut winner determin combinatori auction bid comput algorithm also solut case [ author distribut mechan vcg payment mechan design problem mechan roughli amount agent payment other agent secur sixth intl joint conf autonom agent multi-ag system aama central server then sure result pair otherwis re-calcul gener idea redund principl also problem exist secur center agent everyon trust interest approach [ ] bid agent bid thu set bid central winner determin algorithm problem final comput clock auction agent percentag surplu solut current best such agent imparti comput entiti not set possibl buyer paus auction conclus solut winner determin problem fit applic exampl agent not valuat auction comput load bidder paus auction few approach winner determin problem combinatori auction auction even complet auction instead agent task auction howev paus rule bidder not bidder bid algorithm pausebid cachedpausebid bidder agent paus auction algorithm implement myopic util strategi bidset agent s util set outstand bid time possibl futur bid algorithm find time same distribut item revenue-maxim solut case algorithm distribut larg gap first second valuat set set item np-hard problem run time algorithm exponenti significantli full search pausebid branch bound search complet time cachedpausebid partial solut branch bound search onli few portion chang bid consecut time cachedpausebid perform node half revenu paus auction revenu revenue-maxim solut central winner determin algorithm howev cachedpausebid gener averag % revenu pausebid also revenu algorithm increas function number item auction algorithm feasibl complex coordin constraint combinatori auction central winner determin algorithm moreov design paus auction agent auction also incent requir comput bid algorithm multiag system combinatori auction coordin rather not central auction 